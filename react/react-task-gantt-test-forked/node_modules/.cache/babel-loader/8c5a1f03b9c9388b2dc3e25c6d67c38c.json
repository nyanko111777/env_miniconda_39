{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\M151325\\\\000_work\\\\test\\\\react\\\\react-task-gantt-test-forked\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _objectSpread from \"C:\\\\Users\\\\M151325\\\\000_work\\\\test\\\\react\\\\react-task-gantt-test-forked\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\M151325\\\\000_work\\\\test\\\\react\\\\react-task-gantt-test-forked\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\M151325\\\\000_work\\\\test\\\\react\\\\react-task-gantt-test-forked\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\M151325\\\\000_work\\\\test\\\\react\\\\react-task-gantt-test-forked\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport \"./styles.css\";\nimport { Gantt, ViewMode } from \"gantt-task-react\";\nimport { useState } from \"react\";\nimport { initTasks, getStartEndDateForProject } from \"./helpers\";\nimport { ViewSwitcher } from \"./ViewSwitcher\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var _useState = useState(ViewMode.Day),\n      _useState2 = _slicedToArray(_useState, 2),\n      view = _useState2[0],\n      setView = _useState2[1];\n\n  var _useState3 = useState(initTasks()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tasks = _useState4[0],\n      setTasks = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isChecked = _useState6[0],\n      setIsChecked = _useState6[1];\n\n  var columnWidth = 60;\n\n  if (view === ViewMode.Month) {\n    columnWidth = 300;\n  } else if (view === ViewMode.Week) {\n    columnWidth = 250;\n  }\n\n  var handleTaskChange = function handleTaskChange(task) {\n    console.log(\"On date change Id:\" + task.id);\n    var newTasks = tasks.map(function (t) {\n      return t.id === task.id ? task : t;\n    });\n\n    if (task.project) {\n      var _getStartEndDateForPr = getStartEndDateForProject(newTasks, task.project),\n          _getStartEndDateForPr2 = _slicedToArray(_getStartEndDateForPr, 2),\n          start = _getStartEndDateForPr2[0],\n          end = _getStartEndDateForPr2[1];\n\n      var project = newTasks[newTasks.findIndex(function (t) {\n        return t.id === task.project;\n      })];\n\n      if (project.start.getTime() !== start.getTime() || project.end.getTime() !== end.getTime()) {\n        var changedProject = _objectSpread(_objectSpread({}, project), {}, {\n          start: start,\n          end: end\n        });\n\n        newTasks = newTasks.map(function (t) {\n          return t.id === task.project ? changedProject : t;\n        });\n      }\n    }\n\n    setTasks(newTasks);\n  };\n\n  var handleTaskDelete = function handleTaskDelete(task) {\n    var conf = window.confirm(\"Are you sure about \" + task.name + \" ?\");\n\n    if (conf) {\n      setTasks(tasks.filter(function (t) {\n        return t.id !== task.id;\n      }));\n    }\n\n    return conf;\n  };\n\n  var handleProgressChange = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(task) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setTasks(tasks.map(function (t) {\n                return t.id === task.id ? task : t;\n              }));\n              console.log(\"On progress change Id:\" + task.id);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleProgressChange(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleDblClick = function handleDblClick(task) {\n    alert(\"On Double Click event Id:\" + task.id);\n  };\n\n  var handleSelect = function handleSelect(task, isSelected) {\n    console.log(task.name + \" has \" + (isSelected ? \"selected\" : \"unselected\"));\n  };\n\n  var handleExpanderClick = function handleExpanderClick(task) {\n    setTasks(tasks.map(function (t) {\n      return t.id === task.id ? task : t;\n    }));\n    console.log(\"On expander click Id:\" + task.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ViewSwitcher, {\n      onViewModeChange: function onViewModeChange(viewMode) {\n        return setView(viewMode);\n      },\n      onViewListChange: setIsChecked,\n      isChecked: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Gantt With Unlimited Height\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Gantt, {\n      tasks: tasks,\n      viewMode: view,\n      onDateChange: handleTaskChange,\n      onDelete: handleTaskDelete,\n      onProgressChange: handleProgressChange,\n      onDoubleClick: handleDblClick,\n      onSelect: handleSelect,\n      onExpanderClick: handleExpanderClick,\n      listCellWidth: isChecked ? \"155px\" : \"\",\n      columnWidth: columnWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Gopz4voFb68EXFefwEmP/UEFYSM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/M151325/000_work/test/react/react-task-gantt-test-forked/src/App.tsx"],"names":["Gantt","ViewMode","useState","initTasks","getStartEndDateForProject","ViewSwitcher","App","Day","view","setView","tasks","setTasks","isChecked","setIsChecked","columnWidth","Month","Week","handleTaskChange","task","console","log","id","newTasks","map","t","project","start","end","findIndex","getTime","changedProject","handleTaskDelete","conf","window","confirm","name","filter","handleProgressChange","handleDblClick","alert","handleSelect","isSelected","handleExpanderClick","viewMode"],"mappings":"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","sourcesContent":["import \"./styles.css\";\nimport { Gantt, Task, ViewMode } from \"gantt-task-react\";\nimport { useState } from \"react\";\nimport { initTasks, getStartEndDateForProject } from \"./helpers\";\nimport { ViewSwitcher } from \"./ViewSwitcher\";\n\nexport default function App() {\n  const [view, setView] = useState<ViewMode>(ViewMode.Day);\n  const [tasks, setTasks] = useState<Task[]>(initTasks());\n  const [isChecked, setIsChecked] = useState(true);\n  let columnWidth = 60;\n  if (view === ViewMode.Month) {\n    columnWidth = 300;\n  } else if (view === ViewMode.Week) {\n    columnWidth = 250;\n  }\n\n  const handleTaskChange = (task: Task) => {\n    console.log(\"On date change Id:\" + task.id);\n    let newTasks = tasks.map((t) => (t.id === task.id ? task : t));\n    if (task.project) {\n      const [start, end] = getStartEndDateForProject(newTasks, task.project);\n      const project =\n        newTasks[newTasks.findIndex((t) => t.id === task.project)];\n      if (\n        project.start.getTime() !== start.getTime() ||\n        project.end.getTime() !== end.getTime()\n      ) {\n        const changedProject = { ...project, start, end };\n        newTasks = newTasks.map((t) =>\n          t.id === task.project ? changedProject : t\n        );\n      }\n    }\n    setTasks(newTasks);\n  };\n\n  const handleTaskDelete = (task: Task) => {\n    const conf = window.confirm(\"Are you sure about \" + task.name + \" ?\");\n    if (conf) {\n      setTasks(tasks.filter((t) => t.id !== task.id));\n    }\n    return conf;\n  };\n\n  const handleProgressChange = async (task: Task) => {\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\n    console.log(\"On progress change Id:\" + task.id);\n  };\n\n  const handleDblClick = (task: Task) => {\n    alert(\"On Double Click event Id:\" + task.id);\n  };\n\n  const handleSelect = (task: Task, isSelected: boolean) => {\n    console.log(task.name + \" has \" + (isSelected ? \"selected\" : \"unselected\"));\n  };\n\n  const handleExpanderClick = (task: Task) => {\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\n    console.log(\"On expander click Id:\" + task.id);\n  };\n\n  return (\n    <div>\n      <ViewSwitcher\n        onViewModeChange={(viewMode: ViewMode) => setView(viewMode)}\n        onViewListChange={setIsChecked}\n        isChecked={isChecked}\n      />\n      <h3>Gantt With Unlimited Height</h3>\n      <Gantt\n        tasks={tasks}\n        viewMode={view}\n        onDateChange={handleTaskChange}\n        onDelete={handleTaskDelete}\n        onProgressChange={handleProgressChange}\n        onDoubleClick={handleDblClick}\n        onSelect={handleSelect}\n        onExpanderClick={handleExpanderClick}\n        listCellWidth={isChecked ? \"155px\" : \"\"}\n        columnWidth={columnWidth}\n      />\n      {/* <h3>Gantt With Limited Height</h3>\n      <Gantt\n        tasks={tasks}\n        viewMode={view}\n        onDateChange={handleTaskChange}\n        onDelete={handleTaskDelete}\n        onProgressChange={handleProgressChange}\n        onDoubleClick={handleDblClick}\n        onSelect={handleSelect}\n        onExpanderClick={handleExpanderClick}\n        listCellWidth={isChecked ? \"155px\" : \"\"}\n        ganttHeight={300}\n        columnWidth={columnWidth}\n      /> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}