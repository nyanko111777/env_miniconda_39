{"ast":null,"code":"import React, { useMemo, useRef, useState, useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar ViewMode;\n\n(function (ViewMode) {\n  ViewMode[\"QuarterDay\"] = \"Quarter Day\";\n  ViewMode[\"HalfDay\"] = \"Half Day\";\n  ViewMode[\"Day\"] = \"Day\";\n  ViewMode[\"Week\"] = \"Week\";\n  ViewMode[\"Month\"] = \"Month\";\n})(ViewMode || (ViewMode = {}));\n\nvar intlDTCache = {};\n\nvar getCachedDateTimeFormat = function getCachedDateTimeFormat(locString, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var key = JSON.stringify([locString, opts]);\n  var dtf = intlDTCache[key];\n\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n\n  return dtf;\n};\n\nvar addToDate = function addToDate(date, quantity, scale) {\n  var newDate = new Date(date.getFullYear() + (scale === \"year\" ? quantity : 0), date.getMonth() + (scale === \"month\" ? quantity : 0), date.getDate() + (scale === \"day\" ? quantity : 0), date.getHours() + (scale === \"hour\" ? quantity : 0), date.getMinutes() + (scale === \"minute\" ? quantity : 0), date.getSeconds() + (scale === \"second\" ? quantity : 0), date.getMilliseconds() + (scale === \"millisecond\" ? quantity : 0));\n  return newDate;\n};\n\nvar startOfDate = function startOfDate(date, scale) {\n  var scores = [\"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"month\", \"year\"];\n\n  var shouldReset = function shouldReset(_scale) {\n    var maxScore = scores.indexOf(scale);\n    return scores.indexOf(_scale) <= maxScore;\n  };\n\n  var newDate = new Date(date.getFullYear(), shouldReset(\"year\") ? 0 : date.getMonth(), shouldReset(\"month\") ? 1 : date.getDate(), shouldReset(\"day\") ? 0 : date.getHours(), shouldReset(\"hour\") ? 0 : date.getMinutes(), shouldReset(\"minute\") ? 0 : date.getSeconds(), shouldReset(\"second\") ? 0 : date.getMilliseconds());\n  return newDate;\n};\n\nvar ganttDateRange = function ganttDateRange(tasks, viewMode) {\n  var newStartDate = tasks[0].start;\n  var newEndDate = tasks[0].start;\n\n  for (var _iterator = _createForOfIteratorHelperLoose(tasks), _step; !(_step = _iterator()).done;) {\n    var task = _step.value;\n\n    if (task.start < newStartDate) {\n      newStartDate = task.start;\n    }\n\n    if (task.end > newEndDate) {\n      newEndDate = task.end;\n    }\n  }\n\n  switch (viewMode) {\n    case ViewMode.Month:\n      newStartDate = addToDate(newStartDate, -1, \"month\");\n      newStartDate = startOfDate(newStartDate, \"month\");\n      newEndDate = addToDate(newEndDate, 1, \"year\");\n      newEndDate = startOfDate(newEndDate, \"year\");\n      break;\n\n    case ViewMode.Week:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(getMonday(newStartDate), -7, \"day\");\n      newEndDate = addToDate(newEndDate, 1.5, \"month\");\n      break;\n\n    case ViewMode.Day:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1, \"day\");\n      newEndDate = addToDate(newEndDate, 19, \"day\");\n      break;\n\n    case ViewMode.QuarterDay:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1, \"day\");\n      newEndDate = addToDate(newEndDate, 66, \"hour\");\n      break;\n\n    case ViewMode.HalfDay:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1, \"day\");\n      newEndDate = addToDate(newEndDate, 108, \"hour\");\n      break;\n  }\n\n  return [newStartDate, newEndDate];\n};\n\nvar seedDates = function seedDates(startDate, endDate, viewMode) {\n  var currentDate = new Date(startDate);\n  var dates = [currentDate];\n\n  while (currentDate < endDate) {\n    switch (viewMode) {\n      case ViewMode.Month:\n        currentDate = addToDate(currentDate, 1, \"month\");\n        break;\n\n      case ViewMode.Week:\n        currentDate = addToDate(currentDate, 7, \"day\");\n        break;\n\n      case ViewMode.Day:\n        currentDate = addToDate(currentDate, 1, \"day\");\n        break;\n\n      case ViewMode.HalfDay:\n        currentDate = addToDate(currentDate, 12, \"hour\");\n        break;\n\n      case ViewMode.QuarterDay:\n        currentDate = addToDate(currentDate, 6, \"hour\");\n        break;\n    }\n\n    dates.push(currentDate);\n  }\n\n  return dates;\n};\n\nvar getLocaleMonth = function getLocaleMonth(date, locale) {\n  var bottomValue = getCachedDateTimeFormat(locale, {\n    month: \"long\"\n  }).format(date);\n  bottomValue = bottomValue.replace(bottomValue[0], bottomValue[0].toLocaleUpperCase());\n  return bottomValue;\n};\n\nvar getMonday = function getMonday(date) {\n  var day = date.getDay();\n  var diff = date.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(date.setDate(diff));\n};\n\nvar getWeekNumberISO8601 = function getWeekNumberISO8601(date) {\n  var tmpDate = new Date(date.valueOf());\n  var dayNumber = (tmpDate.getDay() + 6) % 7;\n  tmpDate.setDate(tmpDate.getDate() - dayNumber + 3);\n  var firstThursday = tmpDate.valueOf();\n  tmpDate.setMonth(0, 1);\n\n  if (tmpDate.getDay() !== 4) {\n    tmpDate.setMonth(0, 1 + (4 - tmpDate.getDay() + 7) % 7);\n  }\n\n  var weekNumber = (1 + Math.ceil((firstThursday - tmpDate.valueOf()) / 604800000)).toString();\n\n  if (weekNumber.length === 1) {\n    return \"0\" + weekNumber;\n  } else {\n    return weekNumber;\n  }\n};\n\nvar getDaysInMonth = function getDaysInMonth(month, year) {\n  return new Date(year, month + 1, 0).getDate();\n};\n\nvar styles = {\n  \"ganttTable\": \"_3_ygE\",\n  \"ganttTable_Header\": \"_1nBOt\",\n  \"ganttTable_HeaderSeparator\": \"_2eZzQ\",\n  \"ganttTable_HeaderItem\": \"_WuQ0f\"\n};\n\nvar TaskListHeaderDefault = function TaskListHeaderDefault(_ref) {\n  var headerHeight = _ref.headerHeight,\n      fontFamily = _ref.fontFamily,\n      fontSize = _ref.fontSize,\n      rowWidth = _ref.rowWidth;\n  return React.createElement(\"div\", {\n    className: styles.ganttTable,\n    style: {\n      fontFamily: fontFamily,\n      fontSize: fontSize\n    }\n  }, React.createElement(\"div\", {\n    className: styles.ganttTable_Header,\n    style: {\n      height: headerHeight - 2\n    }\n  }, React.createElement(\"div\", {\n    className: styles.ganttTable_HeaderItem,\n    style: {\n      minWidth: rowWidth\n    }\n  }, \"\\xA0Name\"), React.createElement(\"div\", {\n    className: styles.ganttTable_HeaderSeparator,\n    style: {\n      height: headerHeight * 0.5,\n      marginTop: headerHeight * 0.2\n    }\n  }), React.createElement(\"div\", {\n    className: styles.ganttTable_HeaderItem,\n    style: {\n      minWidth: rowWidth\n    }\n  }, \"\\xA0From\"), React.createElement(\"div\", {\n    className: styles.ganttTable_HeaderSeparator,\n    style: {\n      height: headerHeight * 0.5,\n      marginTop: headerHeight * 0.25\n    }\n  }), React.createElement(\"div\", {\n    className: styles.ganttTable_HeaderItem,\n    style: {\n      minWidth: rowWidth\n    }\n  }, \"\\xA0To\")));\n};\n\nvar styles$1 = {\n  \"taskListWrapper\": \"_3ZbQT\",\n  \"taskListTableRow\": \"_34SS0\",\n  \"taskListCell\": \"_3lLk3\",\n  \"taskListNameWrapper\": \"_nI1Xw\",\n  \"taskListExpander\": \"_2QjE6\",\n  \"taskListEmptyExpander\": \"_2TfEi\"\n};\nvar localeDateStringCache = {};\n\nvar toLocaleDateStringFactory = function toLocaleDateStringFactory(locale) {\n  return function (date, dateTimeOptions) {\n    var key = date.toString();\n    var lds = localeDateStringCache[key];\n\n    if (!lds) {\n      lds = date.toLocaleDateString(locale, dateTimeOptions);\n      localeDateStringCache[key] = lds;\n    }\n\n    return lds;\n  };\n};\n\nvar dateTimeOptions = {\n  weekday: \"short\",\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\"\n};\n\nvar TaskListTableDefault = function TaskListTableDefault(_ref) {\n  var rowHeight = _ref.rowHeight,\n      rowWidth = _ref.rowWidth,\n      tasks = _ref.tasks,\n      fontFamily = _ref.fontFamily,\n      fontSize = _ref.fontSize,\n      locale = _ref.locale,\n      onExpanderClick = _ref.onExpanderClick;\n  var toLocaleDateString = useMemo(function () {\n    return toLocaleDateStringFactory(locale);\n  }, [locale]);\n  return React.createElement(\"div\", {\n    className: styles$1.taskListWrapper,\n    style: {\n      fontFamily: fontFamily,\n      fontSize: fontSize\n    }\n  }, tasks.map(function (t) {\n    var expanderSymbol = \"\";\n\n    if (t.hideChildren === false) {\n      expanderSymbol = \"▼\";\n    } else if (t.hideChildren === true) {\n      expanderSymbol = \"▶\";\n    }\n\n    return React.createElement(\"div\", {\n      className: styles$1.taskListTableRow,\n      style: {\n        height: rowHeight\n      },\n      key: t.id + \"row\"\n    }, React.createElement(\"div\", {\n      className: styles$1.taskListCell,\n      style: {\n        minWidth: rowWidth,\n        maxWidth: rowWidth\n      },\n      title: t.name\n    }, React.createElement(\"div\", {\n      className: styles$1.taskListNameWrapper\n    }, React.createElement(\"div\", {\n      className: expanderSymbol ? styles$1.taskListExpander : styles$1.taskListEmptyExpander,\n      onClick: function onClick() {\n        return onExpanderClick(t);\n      }\n    }, expanderSymbol), React.createElement(\"div\", null, t.name))), React.createElement(\"div\", {\n      className: styles$1.taskListCell,\n      style: {\n        minWidth: rowWidth,\n        maxWidth: rowWidth\n      }\n    }, \"\\xA0\", toLocaleDateString(t.start, dateTimeOptions)), React.createElement(\"div\", {\n      className: styles$1.taskListCell,\n      style: {\n        minWidth: rowWidth,\n        maxWidth: rowWidth\n      }\n    }, \"\\xA0\", toLocaleDateString(t.end, dateTimeOptions)));\n  }));\n};\n\nvar styles$2 = {\n  \"tooltipDefaultContainer\": \"_3T42e\",\n  \"tooltipDefaultContainerParagraph\": \"_29NTg\",\n  \"tooltipDetailsContainer\": \"_25P-K\",\n  \"tooltipDetailsContainerHidden\": \"_3gVAq\"\n};\n\nvar Tooltip = function Tooltip(_ref) {\n  var task = _ref.task,\n      rowHeight = _ref.rowHeight,\n      rtl = _ref.rtl,\n      svgContainerHeight = _ref.svgContainerHeight,\n      svgContainerWidth = _ref.svgContainerWidth,\n      scrollX = _ref.scrollX,\n      scrollY = _ref.scrollY,\n      arrowIndent = _ref.arrowIndent,\n      fontSize = _ref.fontSize,\n      fontFamily = _ref.fontFamily,\n      headerHeight = _ref.headerHeight,\n      taskListWidth = _ref.taskListWidth,\n      TooltipContent = _ref.TooltipContent;\n  var tooltipRef = useRef(null);\n\n  var _useState = useState(0),\n      relatedY = _useState[0],\n      setRelatedY = _useState[1];\n\n  var _useState2 = useState(0),\n      relatedX = _useState2[0],\n      setRelatedX = _useState2[1];\n\n  useEffect(function () {\n    if (tooltipRef.current) {\n      var tooltipHeight = tooltipRef.current.offsetHeight * 1.1;\n      var tooltipWidth = tooltipRef.current.offsetWidth * 1.1;\n      var newRelatedY = task.index * rowHeight - scrollY + headerHeight;\n      var newRelatedX;\n\n      if (rtl) {\n        newRelatedX = task.x1 - arrowIndent * 1.5 - tooltipWidth - scrollX;\n\n        if (newRelatedX < 0) {\n          newRelatedX = task.x2 + arrowIndent * 1.5 - scrollX;\n        }\n\n        var tooltipLeftmostPoint = tooltipWidth + newRelatedX;\n\n        if (tooltipLeftmostPoint > svgContainerWidth) {\n          newRelatedX = svgContainerWidth - tooltipWidth;\n          newRelatedY += rowHeight;\n        }\n      } else {\n        newRelatedX = task.x2 + arrowIndent * 1.5 + taskListWidth - scrollX;\n\n        var _tooltipLeftmostPoint = tooltipWidth + newRelatedX;\n\n        var fullChartWidth = taskListWidth + svgContainerWidth;\n\n        if (_tooltipLeftmostPoint > fullChartWidth) {\n          newRelatedX = task.x1 + taskListWidth - arrowIndent * 1.5 - scrollX - tooltipWidth;\n        }\n\n        if (newRelatedX < taskListWidth) {\n          newRelatedX = svgContainerWidth + taskListWidth - tooltipWidth;\n          newRelatedY += rowHeight;\n        }\n      }\n\n      var tooltipLowerPoint = tooltipHeight + newRelatedY - scrollY;\n\n      if (tooltipLowerPoint > svgContainerHeight - scrollY) {\n        newRelatedY = svgContainerHeight - tooltipHeight;\n      }\n\n      setRelatedY(newRelatedY);\n      setRelatedX(newRelatedX);\n    }\n  }, [tooltipRef.current, task, arrowIndent, scrollX, scrollY, headerHeight, taskListWidth, rowHeight, svgContainerHeight, svgContainerWidth]);\n  return React.createElement(\"div\", {\n    ref: tooltipRef,\n    className: relatedX ? styles$2.tooltipDetailsContainer : styles$2.tooltipDetailsContainerHidden,\n    style: {\n      left: relatedX,\n      top: relatedY\n    }\n  }, React.createElement(TooltipContent, {\n    task: task,\n    fontSize: fontSize,\n    fontFamily: fontFamily\n  }));\n};\n\nvar StandardTooltipContent = function StandardTooltipContent(_ref2) {\n  var task = _ref2.task,\n      fontSize = _ref2.fontSize,\n      fontFamily = _ref2.fontFamily;\n  var style = {\n    fontSize: fontSize,\n    fontFamily: fontFamily\n  };\n  return React.createElement(\"div\", {\n    className: styles$2.tooltipDefaultContainer,\n    style: style\n  }, React.createElement(\"b\", {\n    style: {\n      fontSize: fontSize + 6\n    }\n  }, task.name + \": \" + task.start.getDate() + \"-\" + (task.start.getMonth() + 1) + \"-\" + task.start.getFullYear() + \" - \" + task.end.getDate() + \"-\" + (task.end.getMonth() + 1) + \"-\" + task.end.getFullYear()), task.end.getTime() - task.start.getTime() !== 0 && React.createElement(\"p\", {\n    className: styles$2.tooltipDefaultContainerParagraph\n  }, \"Duration: \" + ~~((task.end.getTime() - task.start.getTime()) / (1000 * 60 * 60 * 24)) + \" day(s)\"), React.createElement(\"p\", {\n    className: styles$2.tooltipDefaultContainerParagraph\n  }, !!task.progress && \"Progress: \" + task.progress + \" %\"));\n};\n\nvar styles$3 = {\n  \"scroll\": \"_1eT-t\"\n};\n\nvar VerticalScroll = function VerticalScroll(_ref) {\n  var scroll = _ref.scroll,\n      ganttHeight = _ref.ganttHeight,\n      ganttFullHeight = _ref.ganttFullHeight,\n      headerHeight = _ref.headerHeight,\n      rtl = _ref.rtl,\n      onScroll = _ref.onScroll;\n  var scrollRef = useRef(null);\n  useEffect(function () {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTop = scroll;\n    }\n  }, [scroll]);\n  return React.createElement(\"div\", {\n    style: {\n      height: ganttHeight,\n      marginTop: headerHeight,\n      marginLeft: rtl ? \"\" : \"-17px\"\n    },\n    className: styles$3.scroll,\n    onScroll: onScroll,\n    ref: scrollRef\n  }, React.createElement(\"div\", {\n    style: {\n      height: ganttFullHeight,\n      width: 1\n    }\n  }));\n};\n\nvar TaskList = function TaskList(_ref) {\n  var headerHeight = _ref.headerHeight,\n      fontFamily = _ref.fontFamily,\n      fontSize = _ref.fontSize,\n      rowWidth = _ref.rowWidth,\n      rowHeight = _ref.rowHeight,\n      scrollY = _ref.scrollY,\n      tasks = _ref.tasks,\n      selectedTask = _ref.selectedTask,\n      setSelectedTask = _ref.setSelectedTask,\n      onExpanderClick = _ref.onExpanderClick,\n      locale = _ref.locale,\n      ganttHeight = _ref.ganttHeight,\n      taskListRef = _ref.taskListRef,\n      horizontalContainerClass = _ref.horizontalContainerClass,\n      TaskListHeader = _ref.TaskListHeader,\n      TaskListTable = _ref.TaskListTable;\n  var horizontalContainerRef = useRef(null);\n  useEffect(function () {\n    if (horizontalContainerRef.current) {\n      horizontalContainerRef.current.scrollTop = scrollY;\n    }\n  }, [scrollY]);\n  var headerProps = {\n    headerHeight: headerHeight,\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    rowWidth: rowWidth\n  };\n  var selectedTaskId = selectedTask ? selectedTask.id : \"\";\n  var tableProps = {\n    rowHeight: rowHeight,\n    rowWidth: rowWidth,\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    tasks: tasks,\n    locale: locale,\n    selectedTaskId: selectedTaskId,\n    setSelectedTask: setSelectedTask,\n    onExpanderClick: onExpanderClick\n  };\n  return React.createElement(\"div\", {\n    ref: taskListRef\n  }, React.createElement(TaskListHeader, Object.assign({}, headerProps)), React.createElement(\"div\", {\n    ref: horizontalContainerRef,\n    className: horizontalContainerClass,\n    style: ganttHeight ? {\n      height: ganttHeight\n    } : {}\n  }, React.createElement(TaskListTable, Object.assign({}, tableProps))));\n};\n\nvar styles$4 = {\n  \"gridRow\": \"_2dZTy\",\n  \"gridRowLine\": \"_3rUKi\",\n  \"gridTick\": \"_RuwuK\"\n};\n\nvar GridBody = function GridBody(_ref) {\n  var tasks = _ref.tasks,\n      dates = _ref.dates,\n      rowHeight = _ref.rowHeight,\n      svgWidth = _ref.svgWidth,\n      columnWidth = _ref.columnWidth,\n      todayColor = _ref.todayColor,\n      rtl = _ref.rtl;\n  var y = 0;\n  var gridRows = [];\n  var rowLines = [React.createElement(\"line\", {\n    key: \"RowLineFirst\",\n    x: \"0\",\n    y1: 0,\n    x2: svgWidth,\n    y2: 0,\n    className: styles$4.gridRowLine\n  })];\n\n  for (var _iterator = _createForOfIteratorHelperLoose(tasks), _step; !(_step = _iterator()).done;) {\n    var task = _step.value;\n    gridRows.push(React.createElement(\"rect\", {\n      key: \"Row\" + task.id,\n      x: \"0\",\n      y: y,\n      width: svgWidth,\n      height: rowHeight,\n      className: styles$4.gridRow\n    }));\n    rowLines.push(React.createElement(\"line\", {\n      key: \"RowLine\" + task.id,\n      x: \"0\",\n      y1: y + rowHeight,\n      x2: svgWidth,\n      y2: y + rowHeight,\n      className: styles$4.gridRowLine\n    }));\n    y += rowHeight;\n  }\n\n  var now = new Date();\n  var tickX = 0;\n  var ticks = [];\n  var today = React.createElement(\"rect\", null);\n\n  for (var i = 0; i < dates.length; i++) {\n    var date = dates[i];\n    ticks.push(React.createElement(\"line\", {\n      key: date.getTime(),\n      x1: tickX,\n      y1: 0,\n      x2: tickX,\n      y2: y,\n      className: styles$4.gridTick\n    }));\n\n    if (i + 1 !== dates.length && date.getTime() < now.getTime() && dates[i + 1].getTime() >= now.getTime() || i !== 0 && i + 1 === dates.length && date.getTime() < now.getTime() && addToDate(date, date.getTime() - dates[i - 1].getTime(), \"millisecond\").getTime() >= now.getTime()) {\n      today = React.createElement(\"rect\", {\n        x: tickX,\n        y: 0,\n        width: columnWidth,\n        height: y,\n        fill: todayColor\n      });\n    }\n\n    if (rtl && i + 1 !== dates.length && date.getTime() >= now.getTime() && dates[i + 1].getTime() < now.getTime()) {\n      today = React.createElement(\"rect\", {\n        x: tickX + columnWidth,\n        y: 0,\n        width: columnWidth,\n        height: y,\n        fill: todayColor\n      });\n    }\n\n    tickX += columnWidth;\n  }\n\n  return React.createElement(\"g\", {\n    className: \"gridBody\"\n  }, React.createElement(\"g\", {\n    className: \"rows\"\n  }, gridRows), React.createElement(\"g\", {\n    className: \"rowLines\"\n  }, rowLines), React.createElement(\"g\", {\n    className: \"ticks\"\n  }, ticks), React.createElement(\"g\", {\n    className: \"today\"\n  }, today));\n};\n\nvar Grid = function Grid(props) {\n  return React.createElement(\"g\", {\n    className: \"grid\"\n  }, React.createElement(GridBody, Object.assign({}, props)));\n};\n\nvar styles$5 = {\n  \"calendarBottomText\": \"_9w8d5\",\n  \"calendarTopTick\": \"_1rLuZ\",\n  \"calendarTopText\": \"_2q1Kt\",\n  \"calendarHeader\": \"_35nLX\"\n};\n\nvar TopPartOfCalendar = function TopPartOfCalendar(_ref) {\n  var value = _ref.value,\n      x1Line = _ref.x1Line,\n      y1Line = _ref.y1Line,\n      y2Line = _ref.y2Line,\n      xText = _ref.xText,\n      yText = _ref.yText;\n  return React.createElement(\"g\", {\n    className: \"calendarTop\"\n  }, React.createElement(\"line\", {\n    x1: x1Line,\n    y1: y1Line,\n    x2: x1Line,\n    y2: y2Line,\n    className: styles$5.calendarTopTick,\n    key: value + \"line\"\n  }), React.createElement(\"text\", {\n    key: value + \"text\",\n    y: yText,\n    x: xText,\n    className: styles$5.calendarTopText\n  }, value));\n};\n\nvar Calendar = function Calendar(_ref) {\n  var dateSetup = _ref.dateSetup,\n      locale = _ref.locale,\n      viewMode = _ref.viewMode,\n      rtl = _ref.rtl,\n      headerHeight = _ref.headerHeight,\n      columnWidth = _ref.columnWidth,\n      fontFamily = _ref.fontFamily,\n      fontSize = _ref.fontSize;\n\n  var getCalendarValuesForMonth = function getCalendarValuesForMonth() {\n    var topValues = [];\n    var bottomValues = [];\n    var topDefaultHeight = headerHeight * 0.5;\n\n    for (var i = 0; i < dateSetup.dates.length; i++) {\n      var date = dateSetup.dates[i];\n      var bottomValue = getLocaleMonth(date, locale);\n      bottomValues.push(React.createElement(\"text\", {\n        key: bottomValue + date.getFullYear(),\n        y: headerHeight * 0.8,\n        x: columnWidth * i + columnWidth * 0.5,\n        className: styles$5.calendarBottomText\n      }, bottomValue));\n\n      if (i === 0 || date.getFullYear() !== dateSetup.dates[i - 1].getFullYear()) {\n        var topValue = date.getFullYear().toString();\n        var xText = void 0;\n\n        if (rtl) {\n          xText = (6 + i + date.getMonth() + 1) * columnWidth;\n        } else {\n          xText = (6 + i - date.getMonth()) * columnWidth;\n        }\n\n        topValues.push(React.createElement(TopPartOfCalendar, {\n          key: topValue,\n          value: topValue,\n          x1Line: columnWidth * i,\n          y1Line: 0,\n          y2Line: topDefaultHeight,\n          xText: xText,\n          yText: topDefaultHeight * 0.9\n        }));\n      }\n    }\n\n    return [topValues, bottomValues];\n  };\n\n  var getCalendarValuesForWeek = function getCalendarValuesForWeek() {\n    var topValues = [];\n    var bottomValues = [];\n    var weeksCount = 1;\n    var topDefaultHeight = headerHeight * 0.5;\n    var dates = dateSetup.dates;\n\n    for (var i = dates.length - 1; i >= 0; i--) {\n      var date = dates[i];\n      var topValue = \"\";\n\n      if (i === 0 || date.getMonth() !== dates[i - 1].getMonth()) {\n        topValue = getLocaleMonth(date, locale) + \", \" + date.getFullYear();\n      }\n\n      var bottomValue = \"W\" + getWeekNumberISO8601(date);\n      bottomValues.push(React.createElement(\"text\", {\n        key: date.getTime(),\n        y: headerHeight * 0.8,\n        x: columnWidth * (i + +rtl),\n        className: styles$5.calendarBottomText\n      }, bottomValue));\n\n      if (topValue) {\n        if (i !== dates.length - 1) {\n          topValues.push(React.createElement(TopPartOfCalendar, {\n            key: topValue,\n            value: topValue,\n            x1Line: columnWidth * i + weeksCount * columnWidth,\n            y1Line: 0,\n            y2Line: topDefaultHeight,\n            xText: columnWidth * i + columnWidth * weeksCount * 0.5,\n            yText: topDefaultHeight * 0.9\n          }));\n        }\n\n        weeksCount = 0;\n      }\n\n      weeksCount++;\n    }\n\n    return [topValues, bottomValues];\n  };\n\n  var getCalendarValuesForDay = function getCalendarValuesForDay() {\n    var topValues = [];\n    var bottomValues = [];\n    var topDefaultHeight = headerHeight * 0.5;\n    var dates = dateSetup.dates;\n\n    for (var i = 0; i < dates.length; i++) {\n      var date = dates[i];\n      var bottomValue = date.getDate().toString();\n      bottomValues.push(React.createElement(\"text\", {\n        key: date.getTime(),\n        y: headerHeight * 0.8,\n        x: columnWidth * i + columnWidth * 0.5,\n        className: styles$5.calendarBottomText\n      }, bottomValue));\n\n      if (i + 1 !== dates.length && date.getMonth() !== dates[i + 1].getMonth()) {\n        var topValue = getLocaleMonth(date, locale);\n        topValues.push(React.createElement(TopPartOfCalendar, {\n          key: topValue + date.getFullYear(),\n          value: topValue,\n          x1Line: columnWidth * (i + 1),\n          y1Line: 0,\n          y2Line: topDefaultHeight,\n          xText: columnWidth * (i + 1) - getDaysInMonth(date.getMonth(), date.getFullYear()) * columnWidth * 0.5,\n          yText: topDefaultHeight * 0.9\n        }));\n      }\n    }\n\n    return [topValues, bottomValues];\n  };\n\n  var getCalendarValuesForOther = function getCalendarValuesForOther() {\n    var topValues = [];\n    var bottomValues = [];\n    var ticks = viewMode === ViewMode.HalfDay ? 2 : 4;\n    var topDefaultHeight = headerHeight * 0.5;\n    var dates = dateSetup.dates;\n\n    for (var i = 0; i < dates.length; i++) {\n      var date = dates[i];\n      var bottomValue = getCachedDateTimeFormat(locale, {\n        hour: \"numeric\"\n      }).format(date);\n      bottomValues.push(React.createElement(\"text\", {\n        key: date.getTime(),\n        y: headerHeight * 0.8,\n        x: columnWidth * (i + +rtl),\n        className: styles$5.calendarBottomText,\n        fontFamily: fontFamily\n      }, bottomValue));\n\n      if (i === 0 || date.getDate() !== dates[i - 1].getDate()) {\n        var topValue = date.getDate() + \" \" + getLocaleMonth(date, locale);\n        topValues.push(React.createElement(TopPartOfCalendar, {\n          key: topValue + date.getFullYear(),\n          value: topValue,\n          x1Line: columnWidth * i + ticks * columnWidth,\n          y1Line: 0,\n          y2Line: topDefaultHeight,\n          xText: columnWidth * i + ticks * columnWidth * 0.5,\n          yText: topDefaultHeight * 0.9\n        }));\n      }\n    }\n\n    return [topValues, bottomValues];\n  };\n\n  var topValues = [];\n  var bottomValues = [];\n\n  switch (dateSetup.viewMode) {\n    case ViewMode.Month:\n      var _getCalendarValuesFor = getCalendarValuesForMonth();\n\n      topValues = _getCalendarValuesFor[0];\n      bottomValues = _getCalendarValuesFor[1];\n      break;\n\n    case ViewMode.Week:\n      var _getCalendarValuesFor2 = getCalendarValuesForWeek();\n\n      topValues = _getCalendarValuesFor2[0];\n      bottomValues = _getCalendarValuesFor2[1];\n      break;\n\n    case ViewMode.Day:\n      var _getCalendarValuesFor3 = getCalendarValuesForDay();\n\n      topValues = _getCalendarValuesFor3[0];\n      bottomValues = _getCalendarValuesFor3[1];\n      break;\n\n    default:\n      var _getCalendarValuesFor4 = getCalendarValuesForOther();\n\n      topValues = _getCalendarValuesFor4[0];\n      bottomValues = _getCalendarValuesFor4[1];\n      break;\n  }\n\n  return React.createElement(\"g\", {\n    className: \"calendar\",\n    fontSize: fontSize,\n    fontFamily: fontFamily\n  }, React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: columnWidth * dateSetup.dates.length,\n    height: headerHeight,\n    className: styles$5.calendarHeader\n  }), bottomValues, \" \", topValues);\n}; // A type of promise-like that resolves synchronously and supports only one observer\n\n\nvar _iteratorSymbol = /*#__PURE__*/typeof Symbol !== \"undefined\" ? Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\")) : \"@@iterator\";\n\nvar _asyncIteratorSymbol = /*#__PURE__*/typeof Symbol !== \"undefined\" ? Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\")) : \"@@asyncIterator\"; // Asynchronously call a function and send errors to recovery continuation\n\n\nfunction _catch(body, recover) {\n  try {\n    var result = body();\n  } catch (e) {\n    return recover(e);\n  }\n\n  if (result && result.then) {\n    return result.then(void 0, recover);\n  }\n\n  return result;\n}\n\nvar Arrow = function Arrow(_ref) {\n  var taskFrom = _ref.taskFrom,\n      taskTo = _ref.taskTo,\n      rowHeight = _ref.rowHeight,\n      taskHeight = _ref.taskHeight,\n      arrowIndent = _ref.arrowIndent,\n      rtl = _ref.rtl;\n  var path;\n  var trianglePoints;\n\n  if (rtl) {\n    var _drownPathAndTriangle = drownPathAndTriangleRTL(taskFrom, taskTo, rowHeight, taskHeight, arrowIndent);\n\n    path = _drownPathAndTriangle[0];\n    trianglePoints = _drownPathAndTriangle[1];\n  } else {\n    var _drownPathAndTriangle2 = drownPathAndTriangle(taskFrom, taskTo, rowHeight, taskHeight, arrowIndent);\n\n    path = _drownPathAndTriangle2[0];\n    trianglePoints = _drownPathAndTriangle2[1];\n  }\n\n  return React.createElement(\"g\", {\n    className: \"arrow\"\n  }, React.createElement(\"path\", {\n    strokeWidth: \"1.5\",\n    d: path,\n    fill: \"none\"\n  }), React.createElement(\"polygon\", {\n    points: trianglePoints\n  }));\n};\n\nvar drownPathAndTriangle = function drownPathAndTriangle(taskFrom, taskTo, rowHeight, taskHeight, arrowIndent) {\n  var indexCompare = taskFrom.index > taskTo.index ? -1 : 1;\n  var taskToEndPosition = taskTo.y + taskHeight / 2;\n  var taskFromEndPosition = taskFrom.x2 + arrowIndent * 2;\n  var taskFromHorizontalOffsetValue = taskFromEndPosition < taskTo.x1 ? \"\" : \"H \" + (taskTo.x1 - arrowIndent);\n  var taskToHorizontalOffsetValue = taskFromEndPosition > taskTo.x1 ? arrowIndent : taskTo.x1 - taskFrom.x2 - arrowIndent;\n  var path = \"M \" + taskFrom.x2 + \" \" + (taskFrom.y + taskHeight / 2) + \" \\n  h \" + arrowIndent + \" \\n  v \" + indexCompare * rowHeight / 2 + \" \\n  \" + taskFromHorizontalOffsetValue + \"\\n  V \" + taskToEndPosition + \" \\n  h \" + taskToHorizontalOffsetValue;\n  var trianglePoints = taskTo.x1 + \",\" + taskToEndPosition + \" \\n  \" + (taskTo.x1 - 5) + \",\" + (taskToEndPosition - 5) + \" \\n  \" + (taskTo.x1 - 5) + \",\" + (taskToEndPosition + 5);\n  return [path, trianglePoints];\n};\n\nvar drownPathAndTriangleRTL = function drownPathAndTriangleRTL(taskFrom, taskTo, rowHeight, taskHeight, arrowIndent) {\n  var indexCompare = taskFrom.index > taskTo.index ? -1 : 1;\n  var taskToEndPosition = taskTo.y + taskHeight / 2;\n  var taskFromEndPosition = taskFrom.x1 - arrowIndent * 2;\n  var taskFromHorizontalOffsetValue = taskFromEndPosition > taskTo.x2 ? \"\" : \"H \" + (taskTo.x2 + arrowIndent);\n  var taskToHorizontalOffsetValue = taskFromEndPosition < taskTo.x2 ? -arrowIndent : taskTo.x2 - taskFrom.x1 + arrowIndent;\n  var path = \"M \" + taskFrom.x1 + \" \" + (taskFrom.y + taskHeight / 2) + \" \\n  h \" + -arrowIndent + \" \\n  v \" + indexCompare * rowHeight / 2 + \" \\n  \" + taskFromHorizontalOffsetValue + \"\\n  V \" + taskToEndPosition + \" \\n  h \" + taskToHorizontalOffsetValue;\n  var trianglePoints = taskTo.x2 + \",\" + taskToEndPosition + \" \\n  \" + (taskTo.x2 + 5) + \",\" + (taskToEndPosition + 5) + \" \\n  \" + (taskTo.x2 + 5) + \",\" + (taskToEndPosition - 5);\n  return [path, trianglePoints];\n};\n\nvar convertToBarTasks = function convertToBarTasks(tasks, dates, columnWidth, rowHeight, taskHeight, barCornerRadius, handleWidth, rtl, barProgressColor, barProgressSelectedColor, barBackgroundColor, barBackgroundSelectedColor, projectProgressColor, projectProgressSelectedColor, projectBackgroundColor, projectBackgroundSelectedColor, milestoneBackgroundColor, milestoneBackgroundSelectedColor) {\n  var dateDelta = dates[1].getTime() - dates[0].getTime() - dates[1].getTimezoneOffset() * 60 * 1000 + dates[0].getTimezoneOffset() * 60 * 1000;\n  var barTasks = tasks.map(function (t, i) {\n    return convertToBarTask(t, i, dates, dateDelta, columnWidth, rowHeight, taskHeight, barCornerRadius, handleWidth, rtl, barProgressColor, barProgressSelectedColor, barBackgroundColor, barBackgroundSelectedColor, projectProgressColor, projectProgressSelectedColor, projectBackgroundColor, projectBackgroundSelectedColor, milestoneBackgroundColor, milestoneBackgroundSelectedColor);\n  });\n  barTasks = barTasks.map(function (task) {\n    var dependencies = task.dependencies || [];\n\n    var _loop = function _loop(j) {\n      var dependence = barTasks.findIndex(function (value) {\n        return value.id === dependencies[j];\n      });\n      if (dependence !== -1) barTasks[dependence].barChildren.push(task);\n    };\n\n    for (var j = 0; j < dependencies.length; j++) {\n      _loop(j);\n    }\n\n    return task;\n  });\n  return barTasks;\n};\n\nvar convertToBarTask = function convertToBarTask(task, index, dates, dateDelta, columnWidth, rowHeight, taskHeight, barCornerRadius, handleWidth, rtl, barProgressColor, barProgressSelectedColor, barBackgroundColor, barBackgroundSelectedColor, projectProgressColor, projectProgressSelectedColor, projectBackgroundColor, projectBackgroundSelectedColor, milestoneBackgroundColor, milestoneBackgroundSelectedColor) {\n  var barTask;\n\n  switch (task.type) {\n    case \"milestone\":\n      barTask = convertToMilestone(task, index, dates, dateDelta, columnWidth, rowHeight, taskHeight, barCornerRadius, handleWidth, milestoneBackgroundColor, milestoneBackgroundSelectedColor);\n      break;\n\n    case \"project\":\n      barTask = convertToBar(task, index, dates, dateDelta, columnWidth, rowHeight, taskHeight, barCornerRadius, handleWidth, rtl, projectProgressColor, projectProgressSelectedColor, projectBackgroundColor, projectBackgroundSelectedColor);\n      break;\n\n    default:\n      barTask = convertToBar(task, index, dates, dateDelta, columnWidth, rowHeight, taskHeight, barCornerRadius, handleWidth, rtl, barProgressColor, barProgressSelectedColor, barBackgroundColor, barBackgroundSelectedColor);\n      break;\n  }\n\n  return barTask;\n};\n\nvar convertToBar = function convertToBar(task, index, dates, dateDelta, columnWidth, rowHeight, taskHeight, barCornerRadius, handleWidth, rtl, barProgressColor, barProgressSelectedColor, barBackgroundColor, barBackgroundSelectedColor) {\n  var x1;\n  var x2;\n\n  if (rtl) {\n    x2 = taskXCoordinateRTL(task.start, dates, dateDelta, columnWidth);\n    x1 = taskXCoordinateRTL(task.end, dates, dateDelta, columnWidth);\n  } else {\n    x1 = taskXCoordinate(task.start, dates, dateDelta, columnWidth);\n    x2 = taskXCoordinate(task.end, dates, dateDelta, columnWidth);\n  }\n\n  var typeInternal = task.type;\n\n  if (typeInternal === \"task\" && x2 - x1 < handleWidth * 2) {\n    typeInternal = \"smalltask\";\n    x2 = x1 + handleWidth * 2;\n  }\n\n  var _progressWithByParams = progressWithByParams(x1, x2, task.progress, rtl),\n      progressWidth = _progressWithByParams[0],\n      progressX = _progressWithByParams[1];\n\n  var y = taskYCoordinate(index, rowHeight, taskHeight);\n  var hideChildren = task.type === \"project\" ? task.hideChildren : undefined;\n\n  var styles = _extends({\n    backgroundColor: barBackgroundColor,\n    backgroundSelectedColor: barBackgroundSelectedColor,\n    progressColor: barProgressColor,\n    progressSelectedColor: barProgressSelectedColor\n  }, task.styles);\n\n  return _extends({}, task, {\n    typeInternal: typeInternal,\n    x1: x1,\n    x2: x2,\n    y: y,\n    index: index,\n    progressX: progressX,\n    progressWidth: progressWidth,\n    barCornerRadius: barCornerRadius,\n    handleWidth: handleWidth,\n    hideChildren: hideChildren,\n    height: taskHeight,\n    barChildren: [],\n    styles: styles\n  });\n};\n\nvar convertToMilestone = function convertToMilestone(task, index, dates, dateDelta, columnWidth, rowHeight, taskHeight, barCornerRadius, handleWidth, milestoneBackgroundColor, milestoneBackgroundSelectedColor) {\n  var x = taskXCoordinate(task.start, dates, dateDelta, columnWidth);\n  var y = taskYCoordinate(index, rowHeight, taskHeight);\n  var x1 = x - taskHeight * 0.5;\n  var x2 = x + taskHeight * 0.5;\n  var rotatedHeight = taskHeight / 1.414;\n\n  var styles = _extends({\n    backgroundColor: milestoneBackgroundColor,\n    backgroundSelectedColor: milestoneBackgroundSelectedColor,\n    progressColor: \"\",\n    progressSelectedColor: \"\"\n  }, task.styles);\n\n  return _extends({}, task, {\n    end: task.start,\n    x1: x1,\n    x2: x2,\n    y: y,\n    index: index,\n    progressX: 0,\n    progressWidth: 0,\n    barCornerRadius: barCornerRadius,\n    handleWidth: handleWidth,\n    typeInternal: task.type,\n    progress: 0,\n    height: rotatedHeight,\n    hideChildren: undefined,\n    barChildren: [],\n    styles: styles\n  });\n};\n\nvar taskXCoordinate = function taskXCoordinate(xDate, dates, dateDelta, columnWidth) {\n  var index = ~~((xDate.getTime() - dates[0].getTime() + xDate.getTimezoneOffset() - dates[0].getTimezoneOffset()) / dateDelta);\n  var x = Math.round((index + (xDate.getTime() - dates[index].getTime() - xDate.getTimezoneOffset() * 60 * 1000 + dates[index].getTimezoneOffset() * 60 * 1000) / dateDelta) * columnWidth);\n  return x;\n};\n\nvar taskXCoordinateRTL = function taskXCoordinateRTL(xDate, dates, dateDelta, columnWidth) {\n  var x = taskXCoordinate(xDate, dates, dateDelta, columnWidth);\n  x += columnWidth;\n  return x;\n};\n\nvar taskYCoordinate = function taskYCoordinate(index, rowHeight, taskHeight) {\n  var y = index * rowHeight + (rowHeight - taskHeight) / 2;\n  return y;\n};\n\nvar progressWithByParams = function progressWithByParams(taskX1, taskX2, progress, rtl) {\n  var progressWidth = (taskX2 - taskX1) * progress * 0.01;\n  var progressX;\n\n  if (rtl) {\n    progressX = taskX2 - progressWidth;\n  } else {\n    progressX = taskX1;\n  }\n\n  return [progressWidth, progressX];\n};\n\nvar progressByX = function progressByX(x, task) {\n  if (x >= task.x2) return 100;else if (x <= task.x1) return 0;else {\n    var barWidth = task.x2 - task.x1;\n    var progressPercent = Math.round((x - task.x1) * 100 / barWidth);\n    return progressPercent;\n  }\n};\n\nvar progressByXRTL = function progressByXRTL(x, task) {\n  if (x >= task.x2) return 0;else if (x <= task.x1) return 100;else {\n    var barWidth = task.x2 - task.x1;\n    var progressPercent = Math.round((task.x2 - x) * 100 / barWidth);\n    return progressPercent;\n  }\n};\n\nvar getProgressPoint = function getProgressPoint(progressX, taskY, taskHeight) {\n  var point = [progressX - 5, taskY + taskHeight, progressX + 5, taskY + taskHeight, progressX, taskY + taskHeight - 8.66];\n  return point.join(\",\");\n};\n\nvar startByX = function startByX(x, xStep, task) {\n  if (x >= task.x2 - task.handleWidth * 2) {\n    x = task.x2 - task.handleWidth * 2;\n  }\n\n  var steps = Math.round((x - task.x1) / xStep);\n  var additionalXValue = steps * xStep;\n  var newX = task.x1 + additionalXValue;\n  return newX;\n};\n\nvar endByX = function endByX(x, xStep, task) {\n  if (x <= task.x1 + task.handleWidth * 2) {\n    x = task.x1 + task.handleWidth * 2;\n  }\n\n  var steps = Math.round((x - task.x2) / xStep);\n  var additionalXValue = steps * xStep;\n  var newX = task.x2 + additionalXValue;\n  return newX;\n};\n\nvar moveByX = function moveByX(x, xStep, task) {\n  var steps = Math.round((x - task.x1) / xStep);\n  var additionalXValue = steps * xStep;\n  var newX1 = task.x1 + additionalXValue;\n  var newX2 = newX1 + task.x2 - task.x1;\n  return [newX1, newX2];\n};\n\nvar dateByX = function dateByX(x, taskX, taskDate, xStep, timeStep) {\n  var newDate = new Date((x - taskX) / xStep * timeStep + taskDate.getTime());\n  newDate = new Date(newDate.getTime() + (newDate.getTimezoneOffset() - taskDate.getTimezoneOffset()) * 60000);\n  return newDate;\n};\n\nvar handleTaskBySVGMouseEvent = function handleTaskBySVGMouseEvent(svgX, action, selectedTask, xStep, timeStep, initEventX1Delta, rtl) {\n  var result;\n\n  switch (selectedTask.type) {\n    case \"milestone\":\n      result = handleTaskBySVGMouseEventForMilestone(svgX, action, selectedTask, xStep, timeStep, initEventX1Delta);\n      break;\n\n    default:\n      result = handleTaskBySVGMouseEventForBar(svgX, action, selectedTask, xStep, timeStep, initEventX1Delta, rtl);\n      break;\n  }\n\n  return result;\n};\n\nvar handleTaskBySVGMouseEventForBar = function handleTaskBySVGMouseEventForBar(svgX, action, selectedTask, xStep, timeStep, initEventX1Delta, rtl) {\n  var changedTask = _extends({}, selectedTask);\n\n  var isChanged = false;\n\n  switch (action) {\n    case \"progress\":\n      if (rtl) {\n        changedTask.progress = progressByXRTL(svgX, selectedTask);\n      } else {\n        changedTask.progress = progressByX(svgX, selectedTask);\n      }\n\n      isChanged = changedTask.progress !== selectedTask.progress;\n\n      if (isChanged) {\n        var _progressWithByParams2 = progressWithByParams(changedTask.x1, changedTask.x2, changedTask.progress, rtl),\n            progressWidth = _progressWithByParams2[0],\n            progressX = _progressWithByParams2[1];\n\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n\n      break;\n\n    case \"start\":\n      {\n        var newX1 = startByX(svgX, xStep, selectedTask);\n        changedTask.x1 = newX1;\n        isChanged = changedTask.x1 !== selectedTask.x1;\n\n        if (isChanged) {\n          if (rtl) {\n            changedTask.end = dateByX(newX1, selectedTask.x1, selectedTask.end, xStep, timeStep);\n          } else {\n            changedTask.start = dateByX(newX1, selectedTask.x1, selectedTask.start, xStep, timeStep);\n          }\n\n          var _progressWithByParams3 = progressWithByParams(changedTask.x1, changedTask.x2, changedTask.progress, rtl),\n              _progressWidth = _progressWithByParams3[0],\n              _progressX = _progressWithByParams3[1];\n\n          changedTask.progressWidth = _progressWidth;\n          changedTask.progressX = _progressX;\n        }\n\n        break;\n      }\n\n    case \"end\":\n      {\n        var newX2 = endByX(svgX, xStep, selectedTask);\n        changedTask.x2 = newX2;\n        isChanged = changedTask.x2 !== selectedTask.x2;\n\n        if (isChanged) {\n          if (rtl) {\n            changedTask.start = dateByX(newX2, selectedTask.x2, selectedTask.start, xStep, timeStep);\n          } else {\n            changedTask.end = dateByX(newX2, selectedTask.x2, selectedTask.end, xStep, timeStep);\n          }\n\n          var _progressWithByParams4 = progressWithByParams(changedTask.x1, changedTask.x2, changedTask.progress, rtl),\n              _progressWidth2 = _progressWithByParams4[0],\n              _progressX2 = _progressWithByParams4[1];\n\n          changedTask.progressWidth = _progressWidth2;\n          changedTask.progressX = _progressX2;\n        }\n\n        break;\n      }\n\n    case \"move\":\n      {\n        var _moveByX = moveByX(svgX - initEventX1Delta, xStep, selectedTask),\n            newMoveX1 = _moveByX[0],\n            newMoveX2 = _moveByX[1];\n\n        isChanged = newMoveX1 !== selectedTask.x1;\n\n        if (isChanged) {\n          changedTask.start = dateByX(newMoveX1, selectedTask.x1, selectedTask.start, xStep, timeStep);\n          changedTask.end = dateByX(newMoveX2, selectedTask.x2, selectedTask.end, xStep, timeStep);\n          changedTask.x1 = newMoveX1;\n          changedTask.x2 = newMoveX2;\n\n          var _progressWithByParams5 = progressWithByParams(changedTask.x1, changedTask.x2, changedTask.progress, rtl),\n              _progressWidth3 = _progressWithByParams5[0],\n              _progressX3 = _progressWithByParams5[1];\n\n          changedTask.progressWidth = _progressWidth3;\n          changedTask.progressX = _progressX3;\n        }\n\n        break;\n      }\n  }\n\n  return {\n    isChanged: isChanged,\n    changedTask: changedTask\n  };\n};\n\nvar handleTaskBySVGMouseEventForMilestone = function handleTaskBySVGMouseEventForMilestone(svgX, action, selectedTask, xStep, timeStep, initEventX1Delta) {\n  var changedTask = _extends({}, selectedTask);\n\n  var isChanged = false;\n\n  switch (action) {\n    case \"move\":\n      {\n        var _moveByX2 = moveByX(svgX - initEventX1Delta, xStep, selectedTask),\n            newMoveX1 = _moveByX2[0],\n            newMoveX2 = _moveByX2[1];\n\n        isChanged = newMoveX1 !== selectedTask.x1;\n\n        if (isChanged) {\n          changedTask.start = dateByX(newMoveX1, selectedTask.x1, selectedTask.start, xStep, timeStep);\n          changedTask.end = changedTask.start;\n          changedTask.x1 = newMoveX1;\n          changedTask.x2 = newMoveX2;\n        }\n\n        break;\n      }\n  }\n\n  return {\n    isChanged: isChanged,\n    changedTask: changedTask\n  };\n};\n\nfunction isKeyboardEvent(event) {\n  return event.key !== undefined;\n}\n\nfunction removeHiddenTasks(tasks) {\n  var groupedTasks = tasks.filter(function (t) {\n    return t.hideChildren && t.type === \"project\";\n  });\n\n  if (groupedTasks.length > 0) {\n    var _loop = function _loop(i) {\n      var groupedTask = groupedTasks[i];\n      var children = getChildren(tasks, groupedTask);\n      tasks = tasks.filter(function (t) {\n        return children.indexOf(t) === -1;\n      });\n    };\n\n    for (var i = 0; groupedTasks.length > i; i++) {\n      _loop(i);\n    }\n  }\n\n  return tasks;\n}\n\nfunction getChildren(taskList, task) {\n  var tasks = [];\n\n  if (task.type !== \"project\") {\n    tasks = taskList.filter(function (t) {\n      return t.dependencies && t.dependencies.indexOf(task.id) !== -1;\n    });\n  } else {\n    tasks = taskList.filter(function (t) {\n      return t.project && t.project === task.id;\n    });\n  }\n\n  var taskChildren = tasks.reduce(function (children, t) {\n    return children.concat(children, getChildren(taskList, t));\n  }, []);\n  tasks = tasks.concat(tasks, taskChildren);\n  return tasks;\n}\n\nvar styles$6 = {\n  \"barWrapper\": \"_KxSXS\",\n  \"barHandle\": \"_3w_5u\",\n  \"barBackground\": \"_31ERP\"\n};\n\nvar BarDisplay = function BarDisplay(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height,\n      isSelected = _ref.isSelected,\n      progressX = _ref.progressX,\n      progressWidth = _ref.progressWidth,\n      barCornerRadius = _ref.barCornerRadius,\n      styles = _ref.styles,\n      onMouseDown = _ref.onMouseDown;\n\n  var getProcessColor = function getProcessColor() {\n    return isSelected ? styles.progressSelectedColor : styles.progressColor;\n  };\n\n  var getBarColor = function getBarColor() {\n    return isSelected ? styles.backgroundSelectedColor : styles.backgroundColor;\n  };\n\n  return React.createElement(\"g\", {\n    onMouseDown: onMouseDown\n  }, React.createElement(\"rect\", {\n    x: x,\n    width: width,\n    y: y,\n    height: height,\n    ry: barCornerRadius,\n    rx: barCornerRadius,\n    fill: getBarColor(),\n    className: styles$6.barBackground\n  }), React.createElement(\"rect\", {\n    x: progressX,\n    width: progressWidth,\n    y: y,\n    height: height,\n    ry: barCornerRadius,\n    rx: barCornerRadius,\n    fill: getProcessColor()\n  }));\n};\n\nvar BarDateHandle = function BarDateHandle(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height,\n      barCornerRadius = _ref.barCornerRadius,\n      onMouseDown = _ref.onMouseDown;\n  return React.createElement(\"rect\", {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    className: styles$6.barHandle,\n    ry: barCornerRadius,\n    rx: barCornerRadius,\n    onMouseDown: onMouseDown\n  });\n};\n\nvar BarProgressHandle = function BarProgressHandle(_ref) {\n  var progressPoint = _ref.progressPoint,\n      onMouseDown = _ref.onMouseDown;\n  return React.createElement(\"polygon\", {\n    className: styles$6.barHandle,\n    points: progressPoint,\n    onMouseDown: onMouseDown\n  });\n};\n\nvar Bar = function Bar(_ref) {\n  var task = _ref.task,\n      isProgressChangeable = _ref.isProgressChangeable,\n      isDateChangeable = _ref.isDateChangeable,\n      rtl = _ref.rtl,\n      onEventStart = _ref.onEventStart,\n      isSelected = _ref.isSelected;\n  var progressPoint = getProgressPoint(+!rtl * task.progressWidth + task.progressX, task.y, task.height);\n  var handleHeight = task.height - 2;\n  return React.createElement(\"g\", {\n    className: styles$6.barWrapper,\n    tabIndex: 0\n  }, React.createElement(BarDisplay, {\n    x: task.x1,\n    y: task.y,\n    width: task.x2 - task.x1,\n    height: task.height,\n    progressX: task.progressX,\n    progressWidth: task.progressWidth,\n    barCornerRadius: task.barCornerRadius,\n    styles: task.styles,\n    isSelected: isSelected,\n    onMouseDown: function onMouseDown(e) {\n      isDateChangeable && onEventStart(\"move\", task, e);\n    }\n  }), React.createElement(\"g\", {\n    className: \"handleGroup\"\n  }, isDateChangeable && React.createElement(\"g\", null, React.createElement(BarDateHandle, {\n    x: task.x1 + 1,\n    y: task.y + 1,\n    width: task.handleWidth,\n    height: handleHeight,\n    barCornerRadius: task.barCornerRadius,\n    onMouseDown: function onMouseDown(e) {\n      onEventStart(\"start\", task, e);\n    }\n  }), React.createElement(BarDateHandle, {\n    x: task.x2 - task.handleWidth - 1,\n    y: task.y + 1,\n    width: task.handleWidth,\n    height: handleHeight,\n    barCornerRadius: task.barCornerRadius,\n    onMouseDown: function onMouseDown(e) {\n      onEventStart(\"end\", task, e);\n    }\n  })), isProgressChangeable && React.createElement(BarProgressHandle, {\n    progressPoint: progressPoint,\n    onMouseDown: function onMouseDown(e) {\n      onEventStart(\"progress\", task, e);\n    }\n  })));\n};\n\nvar BarSmall = function BarSmall(_ref) {\n  var task = _ref.task,\n      isProgressChangeable = _ref.isProgressChangeable,\n      isDateChangeable = _ref.isDateChangeable,\n      onEventStart = _ref.onEventStart,\n      isSelected = _ref.isSelected;\n  var progressPoint = getProgressPoint(task.progressWidth + task.x1, task.y, task.height);\n  return React.createElement(\"g\", {\n    className: styles$6.barWrapper,\n    tabIndex: 0\n  }, React.createElement(BarDisplay, {\n    x: task.x1,\n    y: task.y,\n    width: task.x2 - task.x1,\n    height: task.height,\n    progressX: task.progressX,\n    progressWidth: task.progressWidth,\n    barCornerRadius: task.barCornerRadius,\n    styles: task.styles,\n    isSelected: isSelected,\n    onMouseDown: function onMouseDown(e) {\n      isDateChangeable && onEventStart(\"move\", task, e);\n    }\n  }), React.createElement(\"g\", {\n    className: \"handleGroup\"\n  }, isProgressChangeable && React.createElement(BarProgressHandle, {\n    progressPoint: progressPoint,\n    onMouseDown: function onMouseDown(e) {\n      onEventStart(\"progress\", task, e);\n    }\n  })));\n};\n\nvar styles$7 = {\n  \"milestoneWrapper\": \"_RRr13\",\n  \"milestoneBackground\": \"_2P2B1\"\n};\n\nvar Milestone = function Milestone(_ref) {\n  var task = _ref.task,\n      isDateChangeable = _ref.isDateChangeable,\n      onEventStart = _ref.onEventStart,\n      isSelected = _ref.isSelected;\n  var transform = \"rotate(45 \" + (task.x1 + task.height * 0.356) + \" \\n    \" + (task.y + task.height * 0.85) + \")\";\n\n  var getBarColor = function getBarColor() {\n    return isSelected ? task.styles.backgroundSelectedColor : task.styles.backgroundColor;\n  };\n\n  return React.createElement(\"g\", {\n    tabIndex: 0,\n    className: styles$7.milestoneWrapper\n  }, React.createElement(\"rect\", {\n    fill: getBarColor(),\n    x: task.x1,\n    width: task.height,\n    y: task.y,\n    height: task.height,\n    rx: task.barCornerRadius,\n    ry: task.barCornerRadius,\n    transform: transform,\n    className: styles$7.milestoneBackground,\n    onMouseDown: function onMouseDown(e) {\n      isDateChangeable && onEventStart(\"move\", task, e);\n    }\n  }));\n};\n\nvar styles$8 = {\n  \"projectWrapper\": \"_1KJ6x\",\n  \"projectBackground\": \"_2RbVy\",\n  \"projectTop\": \"_2pZMF\"\n};\n\nvar Project = function Project(_ref) {\n  var task = _ref.task,\n      isSelected = _ref.isSelected;\n  var barColor = isSelected ? task.styles.backgroundSelectedColor : task.styles.backgroundColor;\n  var processColor = isSelected ? task.styles.progressSelectedColor : task.styles.progressColor;\n  var projectWith = task.x2 - task.x1;\n  var projectLeftTriangle = [task.x1, task.y + task.height / 2 - 1, task.x1, task.y + task.height, task.x1 + 15, task.y + task.height / 2 - 1].join(\",\");\n  var projectRightTriangle = [task.x2, task.y + task.height / 2 - 1, task.x2, task.y + task.height, task.x2 - 15, task.y + task.height / 2 - 1].join(\",\");\n  return React.createElement(\"g\", {\n    tabIndex: 0,\n    className: styles$8.projectWrapper\n  }, React.createElement(\"rect\", {\n    fill: barColor,\n    x: task.x1,\n    width: projectWith,\n    y: task.y,\n    height: task.height,\n    rx: task.barCornerRadius,\n    ry: task.barCornerRadius,\n    className: styles$8.projectBackground\n  }), React.createElement(\"rect\", {\n    x: task.progressX,\n    width: task.progressWidth,\n    y: task.y,\n    height: task.height,\n    ry: task.barCornerRadius,\n    rx: task.barCornerRadius,\n    fill: processColor\n  }), React.createElement(\"rect\", {\n    fill: barColor,\n    x: task.x1,\n    width: projectWith,\n    y: task.y,\n    height: task.height / 2,\n    rx: task.barCornerRadius,\n    ry: task.barCornerRadius,\n    className: styles$8.projectTop\n  }), React.createElement(\"polygon\", {\n    className: styles$8.projectTop,\n    points: projectLeftTriangle,\n    fill: barColor\n  }), React.createElement(\"polygon\", {\n    className: styles$8.projectTop,\n    points: projectRightTriangle,\n    fill: barColor\n  }));\n};\n\nvar style = {\n  \"barLabel\": \"_3zRJQ\",\n  \"barLabelOutside\": \"_3KcaM\"\n};\n\nvar TaskItem = function TaskItem(props) {\n  var _props = _extends({}, props),\n      task = _props.task,\n      arrowIndent = _props.arrowIndent,\n      isDelete = _props.isDelete,\n      taskHeight = _props.taskHeight,\n      isSelected = _props.isSelected,\n      rtl = _props.rtl,\n      onEventStart = _props.onEventStart;\n\n  var textRef = useRef(null);\n\n  var _useState = useState(React.createElement(\"div\", null)),\n      taskItem = _useState[0],\n      setTaskItem = _useState[1];\n\n  var _useState2 = useState(true),\n      isTextInside = _useState2[0],\n      setIsTextInside = _useState2[1];\n\n  useEffect(function () {\n    switch (task.typeInternal) {\n      case \"milestone\":\n        setTaskItem(React.createElement(Milestone, Object.assign({}, props)));\n        break;\n\n      case \"project\":\n        setTaskItem(React.createElement(Project, Object.assign({}, props)));\n        break;\n\n      case \"smalltask\":\n        setTaskItem(React.createElement(BarSmall, Object.assign({}, props)));\n        break;\n\n      default:\n        setTaskItem(React.createElement(Bar, Object.assign({}, props)));\n        break;\n    }\n  }, [task, isSelected]);\n  useEffect(function () {\n    if (textRef.current) {\n      setIsTextInside(textRef.current.getBBox().width < task.x2 - task.x1);\n    }\n  }, [textRef, task]);\n\n  var getX = function getX() {\n    var width = task.x2 - task.x1;\n    var hasChild = task.barChildren.length > 0;\n\n    if (isTextInside) {\n      return task.x1 + width * 0.5;\n    }\n\n    if (rtl && textRef.current) {\n      return task.x1 - textRef.current.getBBox().width - arrowIndent * +hasChild - arrowIndent * 0.2;\n    } else {\n      return task.x1 + width + arrowIndent * +hasChild + arrowIndent * 0.2;\n    }\n  };\n\n  return React.createElement(\"g\", {\n    onKeyDown: function onKeyDown(e) {\n      switch (e.key) {\n        case \"Delete\":\n          {\n            if (isDelete) onEventStart(\"delete\", task, e);\n            break;\n          }\n      }\n\n      e.stopPropagation();\n    },\n    onMouseEnter: function onMouseEnter(e) {\n      onEventStart(\"mouseenter\", task, e);\n    },\n    onMouseLeave: function onMouseLeave(e) {\n      onEventStart(\"mouseleave\", task, e);\n    },\n    onDoubleClick: function onDoubleClick(e) {\n      onEventStart(\"dblclick\", task, e);\n    },\n    onFocus: function onFocus() {\n      onEventStart(\"select\", task);\n    }\n  }, taskItem, React.createElement(\"text\", {\n    x: getX(),\n    y: task.y + taskHeight * 0.5,\n    className: isTextInside ? style.barLabel : style.barLabelOutside,\n    ref: textRef\n  }, task.name));\n};\n\nvar TaskGanttContent = function TaskGanttContent(_ref) {\n  var _svg$current;\n\n  var tasks = _ref.tasks,\n      dates = _ref.dates,\n      ganttEvent = _ref.ganttEvent,\n      selectedTask = _ref.selectedTask,\n      rowHeight = _ref.rowHeight,\n      columnWidth = _ref.columnWidth,\n      timeStep = _ref.timeStep,\n      svg = _ref.svg,\n      taskHeight = _ref.taskHeight,\n      arrowColor = _ref.arrowColor,\n      arrowIndent = _ref.arrowIndent,\n      fontFamily = _ref.fontFamily,\n      fontSize = _ref.fontSize,\n      rtl = _ref.rtl,\n      setGanttEvent = _ref.setGanttEvent,\n      setFailedTask = _ref.setFailedTask,\n      setSelectedTask = _ref.setSelectedTask,\n      onDateChange = _ref.onDateChange,\n      onProgressChange = _ref.onProgressChange,\n      onDoubleClick = _ref.onDoubleClick,\n      onDelete = _ref.onDelete;\n  var point = svg === null || svg === void 0 ? void 0 : (_svg$current = svg.current) === null || _svg$current === void 0 ? void 0 : _svg$current.createSVGPoint();\n\n  var _useState = useState(0),\n      xStep = _useState[0],\n      setXStep = _useState[1];\n\n  var _useState2 = useState(0),\n      initEventX1Delta = _useState2[0],\n      setInitEventX1Delta = _useState2[1];\n\n  var _useState3 = useState(false),\n      isMoving = _useState3[0],\n      setIsMoving = _useState3[1];\n\n  useEffect(function () {\n    var dateDelta = dates[1].getTime() - dates[0].getTime() - dates[1].getTimezoneOffset() * 60 * 1000 + dates[0].getTimezoneOffset() * 60 * 1000;\n    var newXStep = timeStep * columnWidth / dateDelta;\n    setXStep(newXStep);\n  }, [columnWidth, dates, timeStep]);\n  useEffect(function () {\n    var handleMouseMove = function handleMouseMove(event) {\n      try {\n        var _svg$current$getScree;\n\n        if (!ganttEvent.changedTask || !point || !(svg !== null && svg !== void 0 && svg.current)) return Promise.resolve();\n        event.preventDefault();\n        point.x = event.clientX;\n        var cursor = point.matrixTransform(svg === null || svg === void 0 ? void 0 : (_svg$current$getScree = svg.current.getScreenCTM()) === null || _svg$current$getScree === void 0 ? void 0 : _svg$current$getScree.inverse());\n\n        var _handleTaskBySVGMouse = handleTaskBySVGMouseEvent(cursor.x, ganttEvent.action, ganttEvent.changedTask, xStep, timeStep, initEventX1Delta, rtl),\n            isChanged = _handleTaskBySVGMouse.isChanged,\n            changedTask = _handleTaskBySVGMouse.changedTask;\n\n        if (isChanged) {\n          setGanttEvent({\n            action: ganttEvent.action,\n            changedTask: changedTask\n          });\n        }\n\n        return Promise.resolve();\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      try {\n        var _svg$current$getScree2;\n\n        var _temp6 = function _temp6() {\n          if (!operationSuccess) {\n            setFailedTask(originalSelectedTask);\n          }\n        };\n\n        var action = ganttEvent.action,\n            originalSelectedTask = ganttEvent.originalSelectedTask,\n            changedTask = ganttEvent.changedTask;\n        if (!changedTask || !point || !(svg !== null && svg !== void 0 && svg.current) || !originalSelectedTask) return Promise.resolve();\n        event.preventDefault();\n        point.x = event.clientX;\n        var cursor = point.matrixTransform(svg === null || svg === void 0 ? void 0 : (_svg$current$getScree2 = svg.current.getScreenCTM()) === null || _svg$current$getScree2 === void 0 ? void 0 : _svg$current$getScree2.inverse());\n\n        var _handleTaskBySVGMouse2 = handleTaskBySVGMouseEvent(cursor.x, action, changedTask, xStep, timeStep, initEventX1Delta, rtl),\n            newChangedTask = _handleTaskBySVGMouse2.changedTask;\n\n        var isNotLikeOriginal = originalSelectedTask.start !== newChangedTask.start || originalSelectedTask.end !== newChangedTask.end || originalSelectedTask.progress !== newChangedTask.progress;\n        svg.current.removeEventListener(\"mousemove\", handleMouseMove);\n        svg.current.removeEventListener(\"mouseup\", handleMouseUp);\n        setGanttEvent({\n          action: \"\"\n        });\n        setIsMoving(false);\n        var operationSuccess = true;\n\n        var _temp7 = function () {\n          if ((action === \"move\" || action === \"end\" || action === \"start\") && onDateChange && isNotLikeOriginal) {\n            var _temp8 = _catch(function () {\n              return Promise.resolve(onDateChange(newChangedTask, newChangedTask.barChildren)).then(function (result) {\n                if (result !== undefined) {\n                  operationSuccess = result;\n                }\n              });\n            }, function () {\n              operationSuccess = false;\n            });\n\n            if (_temp8 && _temp8.then) return _temp8.then(function () {});\n          } else {\n            var _temp9 = function () {\n              if (onProgressChange && isNotLikeOriginal) {\n                var _temp10 = _catch(function () {\n                  return Promise.resolve(onProgressChange(newChangedTask, newChangedTask.barChildren)).then(function (result) {\n                    if (result !== undefined) {\n                      operationSuccess = result;\n                    }\n                  });\n                }, function () {\n                  operationSuccess = false;\n                });\n\n                if (_temp10 && _temp10.then) return _temp10.then(function () {});\n              }\n            }();\n\n            if (_temp9 && _temp9.then) return _temp9.then(function () {});\n          }\n        }();\n\n        return Promise.resolve(_temp7 && _temp7.then ? _temp7.then(_temp6) : _temp6(_temp7));\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    if (!isMoving && (ganttEvent.action === \"move\" || ganttEvent.action === \"end\" || ganttEvent.action === \"start\" || ganttEvent.action === \"progress\") && svg !== null && svg !== void 0 && svg.current) {\n      svg.current.addEventListener(\"mousemove\", handleMouseMove);\n      svg.current.addEventListener(\"mouseup\", handleMouseUp);\n      setIsMoving(true);\n    }\n  }, [ganttEvent, xStep, initEventX1Delta, onProgressChange, timeStep, onDateChange, svg, isMoving]);\n\n  var handleBarEventStart = function handleBarEventStart(action, task, event) {\n    try {\n      return Promise.resolve(function () {\n        if (!event) {\n          if (action === \"select\") {\n            setSelectedTask(task.id);\n          }\n        } else return function () {\n          if (isKeyboardEvent(event)) {\n            var _temp14 = function () {\n              if (action === \"delete\") {\n                var _temp15 = function () {\n                  if (onDelete) {\n                    var _temp16 = _catch(function () {\n                      return Promise.resolve(onDelete(task)).then(function (result) {\n                        if (result !== undefined && result) {\n                          setGanttEvent({\n                            action: action,\n                            changedTask: task\n                          });\n                        }\n                      });\n                    }, function (error) {\n                      console.error(\"Error on Delete. \" + error);\n                    });\n\n                    if (_temp16 && _temp16.then) return _temp16.then(function () {});\n                  }\n                }();\n\n                if (_temp15 && _temp15.then) return _temp15.then(function () {});\n              }\n            }();\n\n            if (_temp14 && _temp14.then) return _temp14.then(function () {});\n          } else if (action === \"mouseenter\") {\n            if (!ganttEvent.action) {\n              setGanttEvent({\n                action: action,\n                changedTask: task,\n                originalSelectedTask: task\n              });\n            }\n          } else if (action === \"mouseleave\") {\n            if (ganttEvent.action === \"mouseenter\") {\n              setGanttEvent({\n                action: \"\"\n              });\n            }\n          } else if (action === \"dblclick\") {\n            !!onDoubleClick && onDoubleClick(task);\n          } else if (action === \"move\") {\n            var _svg$current$getScree3;\n\n            if (!(svg !== null && svg !== void 0 && svg.current) || !point) return;\n            point.x = event.clientX;\n            var cursor = point.matrixTransform((_svg$current$getScree3 = svg.current.getScreenCTM()) === null || _svg$current$getScree3 === void 0 ? void 0 : _svg$current$getScree3.inverse());\n            setInitEventX1Delta(cursor.x - task.x1);\n            setGanttEvent({\n              action: action,\n              changedTask: task,\n              originalSelectedTask: task\n            });\n          } else {\n            setGanttEvent({\n              action: action,\n              changedTask: task,\n              originalSelectedTask: task\n            });\n          }\n        }();\n      }());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  return React.createElement(\"g\", {\n    className: \"content\"\n  }, React.createElement(\"g\", {\n    className: \"arrows\",\n    fill: arrowColor,\n    stroke: arrowColor\n  }, tasks.map(function (task) {\n    return task.barChildren.map(function (child) {\n      return React.createElement(Arrow, {\n        key: \"Arrow from \" + task.id + \" to \" + tasks[child.index].id,\n        taskFrom: task,\n        taskTo: tasks[child.index],\n        rowHeight: rowHeight,\n        taskHeight: taskHeight,\n        arrowIndent: arrowIndent,\n        rtl: rtl\n      });\n    });\n  })), React.createElement(\"g\", {\n    className: \"bar\",\n    fontFamily: fontFamily,\n    fontSize: fontSize\n  }, tasks.map(function (task) {\n    return React.createElement(TaskItem, {\n      task: task,\n      arrowIndent: arrowIndent,\n      taskHeight: taskHeight,\n      isProgressChangeable: !!onProgressChange && !task.isDisabled,\n      isDateChangeable: !!onDateChange && !task.isDisabled,\n      isDelete: !task.isDisabled,\n      onEventStart: handleBarEventStart,\n      key: task.id,\n      isSelected: !!selectedTask && task.id === selectedTask.id,\n      rtl: rtl\n    });\n  })));\n};\n\nvar styles$9 = {\n  \"ganttVerticalContainer\": \"_CZjuD\",\n  \"horizontalContainer\": \"_2B2zv\",\n  \"wrapper\": \"_3eULf\"\n};\n\nvar TaskGantt = function TaskGantt(_ref) {\n  var gridProps = _ref.gridProps,\n      calendarProps = _ref.calendarProps,\n      barProps = _ref.barProps,\n      ganttHeight = _ref.ganttHeight,\n      scrollY = _ref.scrollY,\n      scrollX = _ref.scrollX;\n  var ganttSVGRef = useRef(null);\n  var horizontalContainerRef = useRef(null);\n  var verticalGanttContainerRef = useRef(null);\n\n  var newBarProps = _extends({}, barProps, {\n    svg: ganttSVGRef\n  });\n\n  useEffect(function () {\n    if (horizontalContainerRef.current) {\n      horizontalContainerRef.current.scrollTop = scrollY;\n    }\n  }, [scrollY]);\n  useEffect(function () {\n    if (verticalGanttContainerRef.current) {\n      verticalGanttContainerRef.current.scrollLeft = scrollX;\n    }\n  }, [scrollX]);\n  return React.createElement(\"div\", {\n    className: styles$9.ganttVerticalContainer,\n    ref: verticalGanttContainerRef,\n    dir: \"ltr\"\n  }, React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: gridProps.svgWidth,\n    height: calendarProps.headerHeight,\n    fontFamily: barProps.fontFamily\n  }, React.createElement(Calendar, Object.assign({}, calendarProps))), React.createElement(\"div\", {\n    ref: horizontalContainerRef,\n    className: styles$9.horizontalContainer,\n    style: ganttHeight ? {\n      height: ganttHeight,\n      width: gridProps.svgWidth\n    } : {\n      width: gridProps.svgWidth\n    }\n  }, React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: gridProps.svgWidth,\n    height: barProps.rowHeight * barProps.tasks.length,\n    fontFamily: barProps.fontFamily,\n    ref: ganttSVGRef\n  }, React.createElement(Grid, Object.assign({}, gridProps)), React.createElement(TaskGanttContent, Object.assign({}, newBarProps)))));\n};\n\nvar styles$a = {\n  \"scroll\": \"_19jgW\"\n};\n\nvar HorizontalScroll = function HorizontalScroll(_ref) {\n  var scroll = _ref.scroll,\n      svgWidth = _ref.svgWidth,\n      taskListWidth = _ref.taskListWidth,\n      rtl = _ref.rtl,\n      onScroll = _ref.onScroll;\n  var scrollRef = useRef(null);\n  useEffect(function () {\n    if (scrollRef.current) {\n      scrollRef.current.scrollLeft = scroll;\n    }\n  }, [scroll]);\n  return React.createElement(\"div\", {\n    dir: \"ltr\",\n    style: {\n      margin: rtl ? \"0px \" + taskListWidth + \"px 0px 0px\" : \"0px 0px 0px \" + taskListWidth + \"px\"\n    },\n    className: styles$a.scroll,\n    onScroll: onScroll,\n    ref: scrollRef\n  }, React.createElement(\"div\", {\n    style: {\n      width: svgWidth,\n      height: 1\n    }\n  }));\n};\n\nvar Gantt = function Gantt(_ref) {\n  var tasks = _ref.tasks,\n      _ref$headerHeight = _ref.headerHeight,\n      headerHeight = _ref$headerHeight === void 0 ? 50 : _ref$headerHeight,\n      _ref$columnWidth = _ref.columnWidth,\n      columnWidth = _ref$columnWidth === void 0 ? 60 : _ref$columnWidth,\n      _ref$listCellWidth = _ref.listCellWidth,\n      listCellWidth = _ref$listCellWidth === void 0 ? \"155px\" : _ref$listCellWidth,\n      _ref$rowHeight = _ref.rowHeight,\n      rowHeight = _ref$rowHeight === void 0 ? 50 : _ref$rowHeight,\n      _ref$ganttHeight = _ref.ganttHeight,\n      ganttHeight = _ref$ganttHeight === void 0 ? 0 : _ref$ganttHeight,\n      _ref$viewMode = _ref.viewMode,\n      viewMode = _ref$viewMode === void 0 ? ViewMode.Day : _ref$viewMode,\n      _ref$locale = _ref.locale,\n      locale = _ref$locale === void 0 ? \"en-GB\" : _ref$locale,\n      _ref$barFill = _ref.barFill,\n      barFill = _ref$barFill === void 0 ? 60 : _ref$barFill,\n      _ref$barCornerRadius = _ref.barCornerRadius,\n      barCornerRadius = _ref$barCornerRadius === void 0 ? 3 : _ref$barCornerRadius,\n      _ref$barProgressColor = _ref.barProgressColor,\n      barProgressColor = _ref$barProgressColor === void 0 ? \"#a3a3ff\" : _ref$barProgressColor,\n      _ref$barProgressSelec = _ref.barProgressSelectedColor,\n      barProgressSelectedColor = _ref$barProgressSelec === void 0 ? \"#8282f5\" : _ref$barProgressSelec,\n      _ref$barBackgroundCol = _ref.barBackgroundColor,\n      barBackgroundColor = _ref$barBackgroundCol === void 0 ? \"#b8c2cc\" : _ref$barBackgroundCol,\n      _ref$barBackgroundSel = _ref.barBackgroundSelectedColor,\n      barBackgroundSelectedColor = _ref$barBackgroundSel === void 0 ? \"#aeb8c2\" : _ref$barBackgroundSel,\n      _ref$projectProgressC = _ref.projectProgressColor,\n      projectProgressColor = _ref$projectProgressC === void 0 ? \"#7db59a\" : _ref$projectProgressC,\n      _ref$projectProgressS = _ref.projectProgressSelectedColor,\n      projectProgressSelectedColor = _ref$projectProgressS === void 0 ? \"#59a985\" : _ref$projectProgressS,\n      _ref$projectBackgroun = _ref.projectBackgroundColor,\n      projectBackgroundColor = _ref$projectBackgroun === void 0 ? \"#fac465\" : _ref$projectBackgroun,\n      _ref$projectBackgroun2 = _ref.projectBackgroundSelectedColor,\n      projectBackgroundSelectedColor = _ref$projectBackgroun2 === void 0 ? \"#f7bb53\" : _ref$projectBackgroun2,\n      _ref$milestoneBackgro = _ref.milestoneBackgroundColor,\n      milestoneBackgroundColor = _ref$milestoneBackgro === void 0 ? \"#f1c453\" : _ref$milestoneBackgro,\n      _ref$milestoneBackgro2 = _ref.milestoneBackgroundSelectedColor,\n      milestoneBackgroundSelectedColor = _ref$milestoneBackgro2 === void 0 ? \"#f29e4c\" : _ref$milestoneBackgro2,\n      _ref$rtl = _ref.rtl,\n      rtl = _ref$rtl === void 0 ? false : _ref$rtl,\n      _ref$handleWidth = _ref.handleWidth,\n      handleWidth = _ref$handleWidth === void 0 ? 8 : _ref$handleWidth,\n      _ref$timeStep = _ref.timeStep,\n      timeStep = _ref$timeStep === void 0 ? 300000 : _ref$timeStep,\n      _ref$arrowColor = _ref.arrowColor,\n      arrowColor = _ref$arrowColor === void 0 ? \"grey\" : _ref$arrowColor,\n      _ref$fontFamily = _ref.fontFamily,\n      fontFamily = _ref$fontFamily === void 0 ? \"Arial, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue\" : _ref$fontFamily,\n      _ref$fontSize = _ref.fontSize,\n      fontSize = _ref$fontSize === void 0 ? \"14px\" : _ref$fontSize,\n      _ref$arrowIndent = _ref.arrowIndent,\n      arrowIndent = _ref$arrowIndent === void 0 ? 20 : _ref$arrowIndent,\n      _ref$todayColor = _ref.todayColor,\n      todayColor = _ref$todayColor === void 0 ? \"rgba(252, 248, 227, 0.5)\" : _ref$todayColor,\n      _ref$TooltipContent = _ref.TooltipContent,\n      TooltipContent = _ref$TooltipContent === void 0 ? StandardTooltipContent : _ref$TooltipContent,\n      _ref$TaskListHeader = _ref.TaskListHeader,\n      TaskListHeader = _ref$TaskListHeader === void 0 ? TaskListHeaderDefault : _ref$TaskListHeader,\n      _ref$TaskListTable = _ref.TaskListTable,\n      TaskListTable = _ref$TaskListTable === void 0 ? TaskListTableDefault : _ref$TaskListTable,\n      onDateChange = _ref.onDateChange,\n      onProgressChange = _ref.onProgressChange,\n      onDoubleClick = _ref.onDoubleClick,\n      onDelete = _ref.onDelete,\n      onSelect = _ref.onSelect,\n      onExpanderClick = _ref.onExpanderClick;\n  var wrapperRef = useRef(null);\n  var taskListRef = useRef(null);\n\n  var _useState = useState(function () {\n    var _ganttDateRange = ganttDateRange(tasks, viewMode),\n        startDate = _ganttDateRange[0],\n        endDate = _ganttDateRange[1];\n\n    return {\n      viewMode: viewMode,\n      dates: seedDates(startDate, endDate, viewMode)\n    };\n  }),\n      dateSetup = _useState[0],\n      setDateSetup = _useState[1];\n\n  var _useState2 = useState(rowHeight * barFill / 100),\n      taskHeight = _useState2[0],\n      setTaskHeight = _useState2[1];\n\n  var _useState3 = useState(0),\n      taskListWidth = _useState3[0],\n      setTaskListWidth = _useState3[1];\n\n  var _useState4 = useState(0),\n      svgContainerWidth = _useState4[0],\n      setSvgContainerWidth = _useState4[1];\n\n  var _useState5 = useState(ganttHeight),\n      svgContainerHeight = _useState5[0],\n      setSvgContainerHeight = _useState5[1];\n\n  var _useState6 = useState([]),\n      barTasks = _useState6[0],\n      setBarTasks = _useState6[1];\n\n  var _useState7 = useState({\n    action: \"\"\n  }),\n      ganttEvent = _useState7[0],\n      setGanttEvent = _useState7[1];\n\n  var _useState8 = useState(),\n      selectedTask = _useState8[0],\n      setSelectedTask = _useState8[1];\n\n  var _useState9 = useState(null),\n      failedTask = _useState9[0],\n      setFailedTask = _useState9[1];\n\n  var svgWidth = dateSetup.dates.length * columnWidth;\n  var ganttFullHeight = barTasks.length * rowHeight;\n\n  var _useState10 = useState(0),\n      scrollY = _useState10[0],\n      setScrollY = _useState10[1];\n\n  var _useState11 = useState(-1),\n      scrollX = _useState11[0],\n      setScrollX = _useState11[1];\n\n  var _useState12 = useState(false),\n      ignoreScrollEvent = _useState12[0],\n      setIgnoreScrollEvent = _useState12[1];\n\n  useEffect(function () {\n    var filteredTasks;\n\n    if (onExpanderClick) {\n      filteredTasks = removeHiddenTasks(tasks);\n    } else {\n      filteredTasks = tasks;\n    }\n\n    var _ganttDateRange2 = ganttDateRange(filteredTasks, viewMode),\n        startDate = _ganttDateRange2[0],\n        endDate = _ganttDateRange2[1];\n\n    var newDates = seedDates(startDate, endDate, viewMode);\n\n    if (rtl) {\n      newDates = newDates.reverse();\n\n      if (scrollX === -1) {\n        setScrollX(newDates.length * columnWidth);\n      }\n    }\n\n    setDateSetup({\n      dates: newDates,\n      viewMode: viewMode\n    });\n    setBarTasks(convertToBarTasks(filteredTasks, newDates, columnWidth, rowHeight, taskHeight, barCornerRadius, handleWidth, rtl, barProgressColor, barProgressSelectedColor, barBackgroundColor, barBackgroundSelectedColor, projectProgressColor, projectProgressSelectedColor, projectBackgroundColor, projectBackgroundSelectedColor, milestoneBackgroundColor, milestoneBackgroundSelectedColor));\n  }, [tasks, viewMode, rowHeight, barCornerRadius, columnWidth, taskHeight, handleWidth, barProgressColor, barProgressSelectedColor, barBackgroundColor, barBackgroundSelectedColor, projectProgressColor, projectProgressSelectedColor, projectBackgroundColor, projectBackgroundSelectedColor, milestoneBackgroundColor, milestoneBackgroundSelectedColor, rtl, scrollX, onExpanderClick]);\n  useEffect(function () {\n    var changedTask = ganttEvent.changedTask,\n        action = ganttEvent.action;\n\n    if (changedTask) {\n      if (action === \"delete\") {\n        setGanttEvent({\n          action: \"\"\n        });\n        setBarTasks(barTasks.filter(function (t) {\n          return t.id !== changedTask.id;\n        }));\n      } else if (action === \"move\" || action === \"end\" || action === \"start\" || action === \"progress\") {\n        var prevStateTask = barTasks.find(function (t) {\n          return t.id === changedTask.id;\n        });\n\n        if (prevStateTask && (prevStateTask.start.getTime() !== changedTask.start.getTime() || prevStateTask.end.getTime() !== changedTask.end.getTime() || prevStateTask.progress !== changedTask.progress)) {\n          var newTaskList = barTasks.map(function (t) {\n            return t.id === changedTask.id ? changedTask : t;\n          });\n          setBarTasks(newTaskList);\n        }\n      }\n    }\n  }, [ganttEvent, barTasks]);\n  useEffect(function () {\n    if (failedTask) {\n      setBarTasks(barTasks.map(function (t) {\n        return t.id !== failedTask.id ? t : failedTask;\n      }));\n      setFailedTask(null);\n    }\n  }, [failedTask, barTasks]);\n  useEffect(function () {\n    var newTaskHeight = rowHeight * barFill / 100;\n\n    if (newTaskHeight !== taskHeight) {\n      setTaskHeight(newTaskHeight);\n    }\n  }, [rowHeight, barFill, taskHeight]);\n  useEffect(function () {\n    if (!listCellWidth) {\n      setTaskListWidth(0);\n    }\n\n    if (taskListRef.current) {\n      setTaskListWidth(taskListRef.current.offsetWidth);\n    }\n  }, [taskListRef, listCellWidth]);\n  useEffect(function () {\n    if (wrapperRef.current) {\n      setSvgContainerWidth(wrapperRef.current.offsetWidth - taskListWidth);\n    }\n  }, [wrapperRef, taskListWidth]);\n  useEffect(function () {\n    if (ganttHeight) {\n      setSvgContainerHeight(ganttHeight + headerHeight);\n    } else {\n      setSvgContainerHeight(tasks.length * rowHeight + headerHeight);\n    }\n  }, [ganttHeight, tasks]);\n  useEffect(function () {\n    var handleWheel = function handleWheel(event) {\n      if (event.shiftKey || event.deltaX) {\n        var scrollMove = event.deltaX ? event.deltaX : event.deltaY;\n        var newScrollX = scrollX + scrollMove;\n\n        if (newScrollX < 0) {\n          newScrollX = 0;\n        } else if (newScrollX > svgWidth) {\n          newScrollX = svgWidth;\n        }\n\n        setScrollX(newScrollX);\n        event.preventDefault();\n      } else if (ganttHeight) {\n        var newScrollY = scrollY + event.deltaY;\n\n        if (newScrollY < 0) {\n          newScrollY = 0;\n        } else if (newScrollY > ganttFullHeight - ganttHeight) {\n          newScrollY = ganttFullHeight - ganttHeight;\n        }\n\n        if (newScrollY !== scrollY) {\n          setScrollY(newScrollY);\n          event.preventDefault();\n        }\n      }\n\n      setIgnoreScrollEvent(true);\n    };\n\n    if (wrapperRef.current) {\n      wrapperRef.current.addEventListener(\"wheel\", handleWheel, {\n        passive: false\n      });\n    }\n\n    return function () {\n      if (wrapperRef.current) {\n        wrapperRef.current.removeEventListener(\"wheel\", handleWheel);\n      }\n    };\n  }, [wrapperRef.current, scrollY, scrollX, ganttHeight, svgWidth, rtl]);\n\n  var handleScrollY = function handleScrollY(event) {\n    if (scrollY !== event.currentTarget.scrollTop && !ignoreScrollEvent) {\n      setScrollY(event.currentTarget.scrollTop);\n    }\n\n    setIgnoreScrollEvent(false);\n  };\n\n  var handleScrollX = function handleScrollX(event) {\n    if (scrollX !== event.currentTarget.scrollLeft && !ignoreScrollEvent) {\n      setScrollX(event.currentTarget.scrollLeft);\n    }\n\n    setIgnoreScrollEvent(false);\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    event.preventDefault();\n    var newScrollY = scrollY;\n    var newScrollX = scrollX;\n    var isX = true;\n\n    switch (event.key) {\n      case \"Down\":\n      case \"ArrowDown\":\n        newScrollY += rowHeight;\n        isX = false;\n        break;\n\n      case \"Up\":\n      case \"ArrowUp\":\n        newScrollY -= rowHeight;\n        isX = false;\n        break;\n\n      case \"Left\":\n      case \"ArrowLeft\":\n        newScrollX -= columnWidth;\n        break;\n\n      case \"Right\":\n      case \"ArrowRight\":\n        newScrollX += columnWidth;\n        break;\n    }\n\n    if (isX) {\n      if (newScrollX < 0) {\n        newScrollX = 0;\n      } else if (newScrollX > svgWidth) {\n        newScrollX = svgWidth;\n      }\n\n      setScrollX(newScrollX);\n    } else {\n      if (newScrollY < 0) {\n        newScrollY = 0;\n      } else if (newScrollY > ganttFullHeight - ganttHeight) {\n        newScrollY = ganttFullHeight - ganttHeight;\n      }\n\n      setScrollY(newScrollY);\n    }\n\n    setIgnoreScrollEvent(true);\n  };\n\n  var handleSelectedTask = function handleSelectedTask(taskId) {\n    var newSelectedTask = barTasks.find(function (t) {\n      return t.id === taskId;\n    });\n    var oldSelectedTask = barTasks.find(function (t) {\n      return !!selectedTask && t.id === selectedTask.id;\n    });\n\n    if (onSelect) {\n      if (oldSelectedTask) {\n        onSelect(oldSelectedTask, false);\n      }\n\n      if (newSelectedTask) {\n        onSelect(newSelectedTask, true);\n      }\n    }\n\n    setSelectedTask(newSelectedTask);\n  };\n\n  var handleExpanderClick = function handleExpanderClick(task) {\n    if (onExpanderClick && task.hideChildren !== undefined) {\n      onExpanderClick(_extends({}, task, {\n        hideChildren: !task.hideChildren\n      }));\n    }\n  };\n\n  var gridProps = {\n    columnWidth: columnWidth,\n    svgWidth: svgWidth,\n    tasks: tasks,\n    rowHeight: rowHeight,\n    dates: dateSetup.dates,\n    todayColor: todayColor,\n    rtl: rtl\n  };\n  var calendarProps = {\n    dateSetup: dateSetup,\n    locale: locale,\n    viewMode: viewMode,\n    headerHeight: headerHeight,\n    columnWidth: columnWidth,\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    rtl: rtl\n  };\n  var barProps = {\n    tasks: barTasks,\n    dates: dateSetup.dates,\n    ganttEvent: ganttEvent,\n    selectedTask: selectedTask,\n    rowHeight: rowHeight,\n    taskHeight: taskHeight,\n    columnWidth: columnWidth,\n    arrowColor: arrowColor,\n    timeStep: timeStep,\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    arrowIndent: arrowIndent,\n    svgWidth: svgWidth,\n    rtl: rtl,\n    setGanttEvent: setGanttEvent,\n    setFailedTask: setFailedTask,\n    setSelectedTask: handleSelectedTask,\n    onDateChange: onDateChange,\n    onProgressChange: onProgressChange,\n    onDoubleClick: onDoubleClick,\n    onDelete: onDelete\n  };\n  var tableProps = {\n    rowHeight: rowHeight,\n    rowWidth: listCellWidth,\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    tasks: barTasks,\n    locale: locale,\n    headerHeight: headerHeight,\n    scrollY: scrollY,\n    ganttHeight: ganttHeight,\n    horizontalContainerClass: styles$9.horizontalContainer,\n    selectedTask: selectedTask,\n    taskListRef: taskListRef,\n    setSelectedTask: handleSelectedTask,\n    onExpanderClick: handleExpanderClick,\n    TaskListHeader: TaskListHeader,\n    TaskListTable: TaskListTable\n  };\n  return React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: styles$9.wrapper,\n    onKeyDown: handleKeyDown,\n    tabIndex: 0,\n    ref: wrapperRef\n  }, listCellWidth && React.createElement(TaskList, Object.assign({}, tableProps)), React.createElement(TaskGantt, {\n    gridProps: gridProps,\n    calendarProps: calendarProps,\n    barProps: barProps,\n    ganttHeight: ganttHeight,\n    scrollY: scrollY,\n    scrollX: scrollX\n  }), ganttEvent.changedTask && React.createElement(Tooltip, {\n    arrowIndent: arrowIndent,\n    rowHeight: rowHeight,\n    svgContainerHeight: svgContainerHeight,\n    svgContainerWidth: svgContainerWidth,\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    scrollX: scrollX,\n    scrollY: scrollY,\n    task: ganttEvent.changedTask,\n    headerHeight: headerHeight,\n    taskListWidth: taskListWidth,\n    TooltipContent: TooltipContent,\n    rtl: rtl,\n    svgWidth: svgWidth\n  }), React.createElement(VerticalScroll, {\n    ganttFullHeight: ganttFullHeight,\n    ganttHeight: ganttHeight,\n    headerHeight: headerHeight,\n    scroll: scrollY,\n    onScroll: handleScrollY,\n    rtl: rtl\n  })), React.createElement(HorizontalScroll, {\n    svgWidth: svgWidth,\n    taskListWidth: taskListWidth,\n    scroll: scrollX,\n    rtl: rtl,\n    onScroll: handleScrollX\n  }));\n};\n\nexport { Gantt, ViewMode };","map":{"version":3,"sources":["../src/types/public-types.ts","../src/helpers/date-helper.ts","../src/components/task-list/task-list-header.tsx","../src/components/task-list/task-list-table.tsx","../src/components/other/tooltip.tsx","../src/components/other/vertical-scroll.tsx","../src/components/task-list/task-list.tsx","../src/components/grid/grid-body.tsx","../src/components/grid/grid.tsx","../src/components/calendar/top-part-of-calendar.tsx","../src/components/calendar/calendar.tsx","../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/components/other/arrow.tsx","../src/helpers/bar-helper.ts","../src/helpers/other-helper.ts","../src/components/task-item/bar/bar-display.tsx","../src/components/task-item/bar/bar-date-handle.tsx","../src/components/task-item/bar/bar-progress-handle.tsx","../src/components/task-item/bar/bar.tsx","../src/components/task-item/bar/bar-small.tsx","../src/components/task-item/milestone/milestone.tsx","../src/components/task-item/project/project.tsx","../src/components/task-item/task-item.tsx","../src/components/gantt/task-gantt-content.tsx","../src/components/gantt/task-gantt.tsx","../src/components/other/horizontal-scroll.tsx","../src/components/gantt/gantt.tsx"],"names":["ViewMode","intlDTCache","getCachedDateTimeFormat","opts","key","JSON","dtf","Intl","addToDate","newDate","date","scale","startOfDate","scores","shouldReset","maxScore","ganttDateRange","newStartDate","tasks","newEndDate","task","getMonday","seedDates","currentDate","dates","getLocaleMonth","bottomValue","month","day","diff","getWeekNumberISO8601","tmpDate","dayNumber","firstThursday","weekNumber","Math","getDaysInMonth","TaskListHeaderDefault","headerHeight","fontFamily","fontSize","rowWidth","className","styles","ganttTable","style","ganttTable_Header","height","ganttTable_HeaderItem","minWidth","ganttTable_HeaderSeparator","marginTop","localeDateStringCache","toLocaleDateStringFactory","lds","dateTimeOptions","weekday","year","TaskListTableDefault","rowHeight","locale","onExpanderClick","toLocaleDateString","useMemo","taskListWrapper","expanderSymbol","t","taskListTableRow","taskListCell","maxWidth","title","name","taskListNameWrapper","taskListEmptyExpander","onClick","React","Tooltip","rtl","svgContainerHeight","svgContainerWidth","scrollX","scrollY","arrowIndent","taskListWidth","TooltipContent","tooltipRef","useRef","relatedY","setRelatedY","useState","relatedX","setRelatedX","useEffect","tooltipHeight","tooltipWidth","newRelatedY","newRelatedX","tooltipLeftmostPoint","fullChartWidth","tooltipLowerPoint","ref","tooltipDetailsContainerHidden","left","top","StandardTooltipContent","tooltipDefaultContainer","tooltipDefaultContainerParagraph","VerticalScroll","scroll","ganttHeight","ganttFullHeight","onScroll","scrollRef","marginLeft","width","TaskList","selectedTask","setSelectedTask","taskListRef","horizontalContainerClass","TaskListHeader","TaskListTable","horizontalContainerRef","headerProps","selectedTaskId","tableProps","GridBody","svgWidth","columnWidth","todayColor","y","gridRows","rowLines","x","y1","x2","y2","gridRowLine","id","gridRow","now","tickX","ticks","today","i","x1","gridTick","fill","Grid","TopPartOfCalendar","value","x1Line","y1Line","y2Line","xText","yText","calendarTopTick","calendarTopText","Calendar","dateSetup","viewMode","getCalendarValuesForMonth","topValues","bottomValues","topDefaultHeight","calendarBottomText","topValue","getCalendarValuesForWeek","weeksCount","getCalendarValuesForDay","getCalendarValuesForOther","hour","length","calendarHeader","Arrow","taskFrom","taskTo","taskHeight","path","trianglePoints","drownPathAndTriangleRTL","drownPathAndTriangle","strokeWidth","d","points","indexCompare","taskToEndPosition","taskFromEndPosition","taskFromHorizontalOffsetValue","taskToHorizontalOffsetValue","convertToBarTasks","dateDelta","barTasks","convertToBarTask","dependencies","j","dependence","barTask","convertToMilestone","convertToBar","taskXCoordinateRTL","taskXCoordinate","typeInternal","handleWidth","progressWidth","progressX","progressWithByParams","taskYCoordinate","hideChildren","backgroundColor","backgroundSelectedColor","progressColor","progressSelectedColor","barProgressSelectedColor","index","barCornerRadius","barChildren","rotatedHeight","end","progress","xDate","taskX2","progressByX","barWidth","progressPercent","progressByXRTL","getProgressPoint","point","taskY","startByX","steps","additionalXValue","newX","endByX","moveByX","newX1","newX2","dateByX","taskDate","handleTaskBySVGMouseEvent","result","handleTaskBySVGMouseEventForMilestone","handleTaskBySVGMouseEventForBar","changedTask","isChanged","newMoveX1","newMoveX2","svgX","isKeyboardEvent","event","removeHiddenTasks","groupedTasks","groupedTask","children","getChildren","taskChildren","BarDisplay","isSelected","onMouseDown","getProcessColor","getBarColor","ry","rx","barBackground","BarDateHandle","barHandle","BarProgressHandle","progressPoint","Bar","isProgressChangeable","isDateChangeable","onEventStart","handleHeight","barWrapper","tabIndex","BarSmall","Milestone","transform","milestoneWrapper","milestoneBackground","Project","barColor","processColor","projectWith","projectLeftTriangle","projectRightTriangle","projectWrapper","projectBackground","projectTop","TaskItem","isDelete","textRef","taskItem","setTaskItem","isTextInside","setIsTextInside","getX","hasChild","onKeyDown","e","onMouseEnter","onMouseLeave","onDoubleClick","onFocus","barLabelOutside","TaskGanttContent","ganttEvent","timeStep","svg","arrowColor","setGanttEvent","setFailedTask","onDateChange","onProgressChange","onDelete","xStep","setXStep","initEventX1Delta","setInitEventX1Delta","isMoving","setIsMoving","newXStep","handleMouseMove","cursor","action","handleMouseUp","originalSelectedTask","newChangedTask","isNotLikeOriginal","operationSuccess","handleBarEventStart","error","console","stroke","child","isDisabled","TaskGantt","gridProps","calendarProps","barProps","ganttSVGRef","verticalGanttContainerRef","newBarProps","ganttVerticalContainer","dir","xmlns","horizontalContainer","HorizontalScroll","margin","Gantt","listCellWidth","Day","barFill","barProgressColor","barBackgroundColor","barBackgroundSelectedColor","projectProgressColor","projectProgressSelectedColor","projectBackgroundColor","projectBackgroundSelectedColor","milestoneBackgroundColor","milestoneBackgroundSelectedColor","onSelect","wrapperRef","setDateSetup","startDate","endDate","setTaskHeight","setTaskListWidth","setSvgContainerWidth","setSvgContainerHeight","setBarTasks","failedTask","setScrollY","setScrollX","ignoreScrollEvent","setIgnoreScrollEvent","filteredTasks","newDates","prevStateTask","newTaskList","newTaskHeight","handleWheel","scrollMove","newScrollX","newScrollY","passive","handleScrollY","handleScrollX","handleKeyDown","isX","handleSelectedTask","newSelectedTask","oldSelectedTask","handleExpanderClick","wrapper"],"mappings":"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","sourcesContent":["export enum ViewMode {\n  QuarterDay = \"Quarter Day\",\n  HalfDay = \"Half Day\",\n  Day = \"Day\",\n  /** ISO-8601 week */\n  Week = \"Week\",\n  Month = \"Month\",\n}\nexport type TaskType = \"task\" | \"milestone\" | \"project\";\nexport interface Task {\n  id: string;\n  type: TaskType;\n  name: string;\n  start: Date;\n  end: Date;\n  /**\n   * From 0 to 100\n   */\n  progress: number;\n  styles?: {\n    backgroundColor?: string;\n    backgroundSelectedColor?: string;\n    progressColor?: string;\n    progressSelectedColor?: string;\n  };\n  isDisabled?: boolean;\n  project?: string;\n  dependencies?: string[];\n  hideChildren?: boolean;\n}\n\nexport interface EventOption {\n  /**\n   * Time step value for date changes.\n   */\n  timeStep?: number;\n  /**\n   * Invokes on bar select on unselect.\n   */\n  onSelect?: (task: Task, isSelected: boolean) => void;\n  /**\n   * Invokes on bar double click.\n   */\n  onDoubleClick?: (task: Task) => void;\n  /**\n   * Invokes on end and start time change. Chart undoes operation if method return false or error.\n   */\n  onDateChange?: (\n    task: Task,\n    children: Task[]\n  ) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on progress change. Chart undoes operation if method return false or error.\n   */\n  onProgressChange?: (\n    task: Task,\n    children: Task[]\n  ) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on delete selected task. Chart undoes operation if method return false or error.\n   */\n  onDelete?: (task: Task) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on expander on task list\n   */\n  onExpanderClick?: (task: Task) => void;\n}\n\nexport interface DisplayOption {\n  viewMode?: ViewMode;\n  /**\n   * Specifies the month name language. Able formats: ISO 639-2, Java Locale\n   */\n  locale?: string;\n  rtl?: boolean;\n}\n\nexport interface StylingOption {\n  headerHeight?: number;\n  columnWidth?: number;\n  listCellWidth?: string;\n  rowHeight?: number;\n  ganttHeight?: number;\n  barCornerRadius?: number;\n  handleWidth?: number;\n  fontFamily?: string;\n  fontSize?: string;\n  /**\n   * How many of row width can be taken by task.\n   * From 0 to 100\n   */\n  barFill?: number;\n  barProgressColor?: string;\n  barProgressSelectedColor?: string;\n  barBackgroundColor?: string;\n  barBackgroundSelectedColor?: string;\n  projectProgressColor?: string;\n  projectProgressSelectedColor?: string;\n  projectBackgroundColor?: string;\n  projectBackgroundSelectedColor?: string;\n  milestoneBackgroundColor?: string;\n  milestoneBackgroundSelectedColor?: string;\n  arrowColor?: string;\n  arrowIndent?: number;\n  todayColor?: string;\n  TooltipContent?: React.FC<{\n    task: Task;\n    fontSize: string;\n    fontFamily: string;\n  }>;\n  TaskListHeader?: React.FC<{\n    headerHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n  }>;\n  TaskListTable?: React.FC<{\n    rowHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n    locale: string;\n    tasks: Task[];\n    selectedTaskId: string;\n    /**\n     * Sets selected task by id\n     */\n    setSelectedTask: (taskId: string) => void;\n    onExpanderClick: (task: Task) => void;\n  }>;\n}\n\nexport interface GanttProps extends EventOption, DisplayOption, StylingOption {\n  tasks: Task[];\n}\n","import { Task, ViewMode } from \"../types/public-types\";\nimport DateTimeFormatOptions = Intl.DateTimeFormatOptions;\nimport DateTimeFormat = Intl.DateTimeFormat;\n\ntype DateHelperScales =\n  | \"year\"\n  | \"month\"\n  | \"day\"\n  | \"hour\"\n  | \"minute\"\n  | \"second\"\n  | \"millisecond\";\n\nconst intlDTCache = {};\nexport const getCachedDateTimeFormat = (\n  locString: string | string[],\n  opts: DateTimeFormatOptions = {}\n): DateTimeFormat => {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlDTCache[key];\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n  return dtf;\n};\n\n\nexport const addToDate = (\n  date: Date,\n  quantity: number,\n  scale: DateHelperScales\n) => {\n  const newDate = new Date(\n    date.getFullYear() + (scale === \"year\" ? quantity : 0),\n    date.getMonth() + (scale === \"month\" ? quantity : 0),\n    date.getDate() + (scale === \"day\" ? quantity : 0),\n    date.getHours() + (scale === \"hour\" ? quantity : 0),\n    date.getMinutes() + (scale === \"minute\" ? quantity : 0),\n    date.getSeconds() + (scale === \"second\" ? quantity : 0),\n    date.getMilliseconds() + (scale === \"millisecond\" ? quantity : 0)\n  );\n  return newDate;\n};\n\nexport const startOfDate = (date: Date, scale: DateHelperScales) => {\n  const scores = [\n    \"millisecond\",\n    \"second\",\n    \"minute\",\n    \"hour\",\n    \"day\",\n    \"month\",\n    \"year\",\n  ];\n\n  const shouldReset = (_scale: DateHelperScales) => {\n    const maxScore = scores.indexOf(scale);\n    return scores.indexOf(_scale) <= maxScore;\n  };\n  const newDate = new Date(\n    date.getFullYear(),\n    shouldReset(\"year\") ? 0 : date.getMonth(),\n    shouldReset(\"month\") ? 1 : date.getDate(),\n    shouldReset(\"day\") ? 0 : date.getHours(),\n    shouldReset(\"hour\") ? 0 : date.getMinutes(),\n    shouldReset(\"minute\") ? 0 : date.getSeconds(),\n    shouldReset(\"second\") ? 0 : date.getMilliseconds()\n  );\n  return newDate;\n};\n\nexport const ganttDateRange = (tasks: Task[], viewMode: ViewMode) => {\n  let newStartDate: Date = tasks[0].start;\n  let newEndDate: Date = tasks[0].start;\n  for (const task of tasks) {\n    if (task.start < newStartDate) {\n      newStartDate = task.start;\n    }\n    if (task.end > newEndDate) {\n      newEndDate = task.end;\n    }\n  }\n  switch (viewMode) {\n    case ViewMode.Month:\n      newStartDate = addToDate(newStartDate, -1, \"month\");\n      newStartDate = startOfDate(newStartDate, \"month\");\n      newEndDate = addToDate(newEndDate, 1, \"year\");\n      newEndDate = startOfDate(newEndDate, \"year\");\n      break;\n    case ViewMode.Week:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(getMonday(newStartDate), -7, \"day\");\n      newEndDate = addToDate(newEndDate, 1.5, \"month\");\n      break;\n    case ViewMode.Day:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1, \"day\");\n      newEndDate = addToDate(newEndDate, 19, \"day\");\n      break;\n    case ViewMode.QuarterDay:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1, \"day\");\n      newEndDate = addToDate(newEndDate, 66, \"hour\"); // 24(1 day)*3 - 6\n      break;\n    case ViewMode.HalfDay:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1, \"day\");\n      newEndDate = addToDate(newEndDate, 108, \"hour\"); // 24(1 day)*5 - 12\n      break;\n  }\n  return [newStartDate, newEndDate];\n};\n\nexport const seedDates = (\n  startDate: Date,\n  endDate: Date,\n  viewMode: ViewMode\n) => {\n  let currentDate: Date = new Date(startDate);\n  const dates: Date[] = [currentDate];\n  while (currentDate < endDate) {\n    switch (viewMode) {\n      case ViewMode.Month:\n        currentDate = addToDate(currentDate, 1, \"month\");\n        break;\n      case ViewMode.Week:\n        currentDate = addToDate(currentDate, 7, \"day\");\n        break;\n      case ViewMode.Day:\n        currentDate = addToDate(currentDate, 1, \"day\");\n        break;\n      case ViewMode.HalfDay:\n        currentDate = addToDate(currentDate, 12, \"hour\");\n        break;\n      case ViewMode.QuarterDay:\n        currentDate = addToDate(currentDate, 6, \"hour\");\n        break;\n    }\n    dates.push(currentDate);\n  }\n  return dates;\n};\n\nexport const getLocaleMonth = (date: Date, locale: string) => {\n  let bottomValue = getCachedDateTimeFormat(locale, {\n    month: \"long\",\n  }).format(date);\n  bottomValue = bottomValue.replace(\n    bottomValue[0],\n    bottomValue[0].toLocaleUpperCase()\n  );\n  return bottomValue;\n};\n\n/**\n * Returns monday of current week\n * @param date date for modify\n */\nconst getMonday = (date: Date) => {\n  const day = date.getDay();\n  const diff = date.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n  return new Date(date.setDate(diff));\n};\n\nexport const getWeekNumberISO8601 = (date: Date) => {\n  const tmpDate = new Date(date.valueOf());\n  const dayNumber = (tmpDate.getDay() + 6) % 7;\n  tmpDate.setDate(tmpDate.getDate() - dayNumber + 3);\n  const firstThursday = tmpDate.valueOf();\n  tmpDate.setMonth(0, 1);\n  if (tmpDate.getDay() !== 4) {\n    tmpDate.setMonth(0, 1 + ((4 - tmpDate.getDay() + 7) % 7));\n  }\n  const weekNumber = (\n    1 + Math.ceil((firstThursday - tmpDate.valueOf()) / 604800000)\n  ).toString();\n\n  if (weekNumber.length === 1) {\n    return `0${weekNumber}`;\n  } else {\n    return weekNumber;\n  }\n};\n\nexport const getDaysInMonth = (month: number, year: number) => {\n  return new Date(year, month + 1, 0).getDate();\n};\n\n","import React from \"react\";\nimport styles from \"./task-list-header.module.css\";\n\nexport const TaskListHeaderDefault: React.FC<{\n  headerHeight: number;\n  rowWidth: string;\n  fontFamily: string;\n  fontSize: string;\n}> = ({ headerHeight, fontFamily, fontSize, rowWidth }) => {\n  return (\n    <div\n      className={styles.ganttTable}\n      style={{\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n      }}\n    >\n      <div\n        className={styles.ganttTable_Header}\n        style={{\n          height: headerHeight - 2,\n        }}\n      >\n        <div\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;Name\n        </div>\n        <div\n          className={styles.ganttTable_HeaderSeparator}\n          style={{\n            height: headerHeight * 0.5,\n            marginTop: headerHeight * 0.2,\n          }}\n        />\n        <div\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;From\n        </div>\n        <div\n          className={styles.ganttTable_HeaderSeparator}\n          style={{\n            height: headerHeight * 0.5,\n            marginTop: headerHeight * 0.25,\n          }}\n        />\n        <div\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;To\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport styles from \"./task-list-table.module.css\";\nimport { Task } from \"../../types/public-types\";\n\nconst localeDateStringCache = {};\nconst toLocaleDateStringFactory = (locale: string) => (\n  date: Date,\n  dateTimeOptions: Intl.DateTimeFormatOptions\n) => {\n  const key = date.toString();\n  let lds = localeDateStringCache[key];\n  if (!lds) {\n    lds = date.toLocaleDateString(locale, dateTimeOptions);\n    localeDateStringCache[key] = lds;\n  }\n  return lds;\n};\nconst dateTimeOptions: Intl.DateTimeFormatOptions = {\n  weekday: \"short\",\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n};\n\nexport const TaskListTableDefault: React.FC<{\n  rowHeight: number;\n  rowWidth: string;\n  fontFamily: string;\n  fontSize: string;\n  locale: string;\n  tasks: Task[];\n  selectedTaskId: string;\n  setSelectedTask: (taskId: string) => void;\n  onExpanderClick: (task: Task) => void;\n}> = ({\n  rowHeight,\n  rowWidth,\n  tasks,\n  fontFamily,\n  fontSize,\n  locale,\n  onExpanderClick,\n}) => {\n  const toLocaleDateString = useMemo(() => toLocaleDateStringFactory(locale), [\n    locale,\n  ]);\n\n  return (\n    <div\n      className={styles.taskListWrapper}\n      style={{\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n      }}\n    >\n      {tasks.map(t => {\n        let expanderSymbol = \"\";\n        if (t.hideChildren === false) {\n          expanderSymbol = \"▼\";\n        } else if (t.hideChildren === true) {\n          expanderSymbol = \"▶\";\n        }\n\n        return (\n          <div\n            className={styles.taskListTableRow}\n            style={{ height: rowHeight }}\n            key={`${t.id}row`}\n          >\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n              title={t.name}\n            >\n              <div className={styles.taskListNameWrapper}>\n                <div\n                  className={\n                    expanderSymbol\n                      ? styles.taskListExpander\n                      : styles.taskListEmptyExpander\n                  }\n                  onClick={() => onExpanderClick(t)}\n                >\n                  {expanderSymbol}\n                </div>\n                <div>{t.name}</div>\n              </div>\n            </div>\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n            >\n              &nbsp;{toLocaleDateString(t.start, dateTimeOptions)}\n            </div>\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n            >\n              &nbsp;{toLocaleDateString(t.end, dateTimeOptions)}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { Task } from \"../../types/public-types\";\nimport { BarTask } from \"../../types/bar-task\";\nimport styles from \"./tooltip.module.css\";\n\nexport type TooltipProps = {\n  task: BarTask;\n  arrowIndent: number;\n  rtl: boolean;\n  svgContainerHeight: number;\n  svgContainerWidth: number;\n  svgWidth: number;\n  headerHeight: number;\n  taskListWidth: number;\n  scrollX: number;\n  scrollY: number;\n  rowHeight: number;\n  fontSize: string;\n  fontFamily: string;\n  TooltipContent: React.FC<{\n    task: Task;\n    fontSize: string;\n    fontFamily: string;\n  }>;\n};\nexport const Tooltip: React.FC<TooltipProps> = ({\n  task,\n  rowHeight,\n  rtl,\n  svgContainerHeight,\n  svgContainerWidth,\n  scrollX,\n  scrollY,\n  arrowIndent,\n  fontSize,\n  fontFamily,\n  headerHeight,\n  taskListWidth,\n  TooltipContent,\n}) => {\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n  const [relatedY, setRelatedY] = useState(0);\n  const [relatedX, setRelatedX] = useState(0);\n  useEffect(() => {\n    if (tooltipRef.current) {\n      const tooltipHeight = tooltipRef.current.offsetHeight * 1.1;\n      const tooltipWidth = tooltipRef.current.offsetWidth * 1.1;\n\n      let newRelatedY = task.index * rowHeight - scrollY + headerHeight;\n      let newRelatedX: number;\n      if (rtl) {\n        newRelatedX = task.x1 - arrowIndent * 1.5 - tooltipWidth - scrollX;\n        if (newRelatedX < 0) {\n          newRelatedX = task.x2 + arrowIndent * 1.5 - scrollX;\n        }\n        const tooltipLeftmostPoint = tooltipWidth + newRelatedX;\n        if (tooltipLeftmostPoint > svgContainerWidth) {\n          newRelatedX = svgContainerWidth - tooltipWidth;\n          newRelatedY += rowHeight;\n        }\n      } else {\n        newRelatedX = task.x2 + arrowIndent * 1.5 + taskListWidth - scrollX;\n        const tooltipLeftmostPoint = tooltipWidth + newRelatedX;\n        const fullChartWidth = taskListWidth + svgContainerWidth;\n        if (tooltipLeftmostPoint > fullChartWidth) {\n          newRelatedX =\n            task.x1 +\n            taskListWidth -\n            arrowIndent * 1.5 -\n            scrollX -\n            tooltipWidth;\n        }\n        if (newRelatedX < taskListWidth) {\n          newRelatedX = svgContainerWidth + taskListWidth - tooltipWidth;\n          newRelatedY += rowHeight;\n        }\n      }\n\n      const tooltipLowerPoint = tooltipHeight + newRelatedY - scrollY;\n      if (tooltipLowerPoint > svgContainerHeight - scrollY) {\n        newRelatedY = svgContainerHeight - tooltipHeight;\n      }\n      setRelatedY(newRelatedY);\n      setRelatedX(newRelatedX);\n    }\n  }, [\n    tooltipRef.current,\n    task,\n    arrowIndent,\n    scrollX,\n    scrollY,\n    headerHeight,\n    taskListWidth,\n    rowHeight,\n    svgContainerHeight,\n    svgContainerWidth,\n  ]);\n\n  return (\n    <div\n      ref={tooltipRef}\n      className={\n        relatedX\n          ? styles.tooltipDetailsContainer\n          : styles.tooltipDetailsContainerHidden\n      }\n      style={{ left: relatedX, top: relatedY }}\n    >\n      <TooltipContent task={task} fontSize={fontSize} fontFamily={fontFamily} />\n    </div>\n  );\n};\n\nexport const StandardTooltipContent: React.FC<{\n  task: Task;\n  fontSize: string;\n  fontFamily: string;\n}> = ({ task, fontSize, fontFamily }) => {\n  const style = {\n    fontSize,\n    fontFamily,\n  };\n  return (\n    <div className={styles.tooltipDefaultContainer} style={style}>\n      <b style={{ fontSize: fontSize + 6 }}>{`${\n        task.name\n      }: ${task.start.getDate()}-${\n        task.start.getMonth() + 1\n      }-${task.start.getFullYear()} - ${task.end.getDate()}-${\n        task.end.getMonth() + 1\n      }-${task.end.getFullYear()}`}</b>\n      {task.end.getTime() - task.start.getTime() !== 0 && (\n        <p className={styles.tooltipDefaultContainerParagraph}>{`Duration: ${~~(\n          (task.end.getTime() - task.start.getTime()) /\n          (1000 * 60 * 60 * 24)\n        )} day(s)`}</p>\n      )}\n\n      <p className={styles.tooltipDefaultContainerParagraph}>\n        {!!task.progress && `Progress: ${task.progress} %`}\n      </p>\n    </div>\n  );\n};\n","import React, { SyntheticEvent, useRef, useEffect } from \"react\";\nimport styles from \"./vertical-scroll.module.css\";\n\nexport const VerticalScroll: React.FC<{\n  scroll: number;\n  ganttHeight: number;\n  ganttFullHeight: number;\n  headerHeight: number;\n  rtl: boolean;\n  onScroll: (event: SyntheticEvent<HTMLDivElement>) => void;\n}> = ({\n  scroll,\n  ganttHeight,\n  ganttFullHeight,\n  headerHeight,\n  rtl,\n  onScroll,\n}) => {\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTop = scroll;\n    }\n  }, [scroll]);\n\n  return (\n    <div\n      style={{\n        height: ganttHeight,\n        marginTop: headerHeight,\n        marginLeft: rtl ? \"\" : \"-17px\",\n      }}\n      className={styles.scroll}\n      onScroll={onScroll}\n      ref={scrollRef}\n    >\n      <div style={{ height: ganttFullHeight, width: 1 }} />\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { Task } from \"../../types/public-types\";\n\nexport type TaskListProps = {\n  headerHeight: number;\n  rowWidth: string;\n  fontFamily: string;\n  fontSize: string;\n  rowHeight: number;\n  ganttHeight: number;\n  scrollY: number;\n  locale: string;\n  tasks: Task[];\n  taskListRef: React.RefObject<HTMLDivElement>;\n  horizontalContainerClass?: string;\n  selectedTask: BarTask | undefined;\n  setSelectedTask: (task: string) => void;\n  onExpanderClick: (task: Task) => void;\n  TaskListHeader: React.FC<{\n    headerHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n  }>;\n  TaskListTable: React.FC<{\n    rowHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n    locale: string;\n    tasks: Task[];\n    selectedTaskId: string;\n    setSelectedTask: (taskId: string) => void;\n    onExpanderClick: (task: Task) => void;\n  }>;\n};\n\nexport const TaskList: React.FC<TaskListProps> = ({\n  headerHeight,\n  fontFamily,\n  fontSize,\n  rowWidth,\n  rowHeight,\n  scrollY,\n  tasks,\n  selectedTask,\n  setSelectedTask,\n  onExpanderClick,\n  locale,\n  ganttHeight,\n  taskListRef,\n  horizontalContainerClass,\n  TaskListHeader,\n  TaskListTable,\n}) => {\n  const horizontalContainerRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (horizontalContainerRef.current) {\n      horizontalContainerRef.current.scrollTop = scrollY;\n    }\n  }, [scrollY]);\n\n  const headerProps = {\n    headerHeight,\n    fontFamily,\n    fontSize,\n    rowWidth,\n  };\n  const selectedTaskId = selectedTask ? selectedTask.id : \"\";\n  const tableProps = {\n    rowHeight,\n    rowWidth,\n    fontFamily,\n    fontSize,\n    tasks,\n    locale,\n    selectedTaskId: selectedTaskId,\n    setSelectedTask,\n    onExpanderClick,\n  };\n\n  return (\n    <div ref={taskListRef}>\n      <TaskListHeader {...headerProps} />\n      <div\n        ref={horizontalContainerRef}\n        className={horizontalContainerClass}\n        style={ganttHeight ? { height: ganttHeight } : {}}\n      >\n        <TaskListTable {...tableProps} />\n      </div>\n    </div>\n  );\n};\n","import React, { ReactChild } from \"react\";\nimport { Task } from \"../../types/public-types\";\nimport { addToDate } from \"../../helpers/date-helper\";\nimport styles from \"./grid.module.css\";\n\nexport type GridBodyProps = {\n  tasks: Task[];\n  dates: Date[];\n  svgWidth: number;\n  rowHeight: number;\n  columnWidth: number;\n  todayColor: string;\n  rtl: boolean;\n};\nexport const GridBody: React.FC<GridBodyProps> = ({\n  tasks,\n  dates,\n  rowHeight,\n  svgWidth,\n  columnWidth,\n  todayColor,\n  rtl,\n}) => {\n  let y = 0;\n  const gridRows: ReactChild[] = [];\n  const rowLines: ReactChild[] = [\n    <line\n      key=\"RowLineFirst\"\n      x=\"0\"\n      y1={0}\n      x2={svgWidth}\n      y2={0}\n      className={styles.gridRowLine}\n    />,\n  ];\n  for (const task of tasks) {\n    gridRows.push(\n      <rect\n        key={\"Row\" + task.id}\n        x=\"0\"\n        y={y}\n        width={svgWidth}\n        height={rowHeight}\n        className={styles.gridRow}\n      />\n    );\n    rowLines.push(\n      <line\n        key={\"RowLine\" + task.id}\n        x=\"0\"\n        y1={y + rowHeight}\n        x2={svgWidth}\n        y2={y + rowHeight}\n        className={styles.gridRowLine}\n      />\n    );\n    y += rowHeight;\n  }\n\n  const now = new Date();\n  let tickX = 0;\n  const ticks: ReactChild[] = [];\n  let today: ReactChild = <rect />;\n  for (let i = 0; i < dates.length; i++) {\n    const date = dates[i];\n    ticks.push(\n      <line\n        key={date.getTime()}\n        x1={tickX}\n        y1={0}\n        x2={tickX}\n        y2={y}\n        className={styles.gridTick}\n      />\n    );\n    if (\n      (i + 1 !== dates.length &&\n        date.getTime() < now.getTime() &&\n        dates[i + 1].getTime() >= now.getTime()) ||\n      // if current date is last\n      (i !== 0 &&\n        i + 1 === dates.length &&\n        date.getTime() < now.getTime() &&\n        addToDate(\n          date,\n          date.getTime() - dates[i - 1].getTime(),\n          \"millisecond\"\n        ).getTime() >= now.getTime())\n    ) {\n      today = (\n        <rect\n          x={tickX}\n          y={0}\n          width={columnWidth}\n          height={y}\n          fill={todayColor}\n        />\n      );\n    }\n    // rtl for today\n    if (\n      rtl &&\n      i + 1 !== dates.length &&\n      date.getTime() >= now.getTime() &&\n      dates[i + 1].getTime() < now.getTime()\n    ) {\n      today = (\n        <rect\n          x={tickX + columnWidth}\n          y={0}\n          width={columnWidth}\n          height={y}\n          fill={todayColor}\n        />\n      );\n    }\n    tickX += columnWidth;\n  }\n  return (\n    <g className=\"gridBody\">\n      <g className=\"rows\">{gridRows}</g>\n      <g className=\"rowLines\">{rowLines}</g>\n      <g className=\"ticks\">{ticks}</g>\n      <g className=\"today\">{today}</g>\n    </g>\n  );\n};\n","import React from \"react\";\nimport { GridBody, GridBodyProps } from \"./grid-body\";\n\nexport type GridProps = GridBodyProps;\nexport const Grid: React.FC<GridProps> = props => {\n  return (\n    <g className=\"grid\">\n      <GridBody {...props} />\n    </g>\n  );\n};\n","import React from \"react\";\nimport styles from \"./calendar.module.css\";\n\ntype TopPartOfCalendarProps = {\n  value: string;\n  x1Line: number;\n  y1Line: number;\n  y2Line: number;\n  xText: number;\n  yText: number;\n};\n\nexport const TopPartOfCalendar: React.FC<TopPartOfCalendarProps> = ({\n  value,\n  x1Line,\n  y1Line,\n  y2Line,\n  xText,\n  yText,\n}) => {\n  return (\n    <g className=\"calendarTop\">\n      <line\n        x1={x1Line}\n        y1={y1Line}\n        x2={x1Line}\n        y2={y2Line}\n        className={styles.calendarTopTick}\n        key={value + \"line\"}\n      />\n      <text\n        key={value + \"text\"}\n        y={yText}\n        x={xText}\n        className={styles.calendarTopText}\n      >\n        {value}\n      </text>\n    </g>\n  );\n};\n","import React, { ReactChild } from \"react\";\nimport { ViewMode } from \"../../types/public-types\";\nimport { TopPartOfCalendar } from \"./top-part-of-calendar\";\nimport {\n  getCachedDateTimeFormat,\n  getDaysInMonth,\n  getLocaleMonth,\n  getWeekNumberISO8601,\n} from \"../../helpers/date-helper\";\nimport { DateSetup } from \"../../types/date-setup\";\nimport styles from \"./calendar.module.css\";\n\nexport type CalendarProps = {\n  dateSetup: DateSetup;\n  locale: string;\n  viewMode: ViewMode;\n  rtl: boolean;\n  headerHeight: number;\n  columnWidth: number;\n  fontFamily: string;\n  fontSize: string;\n};\n\nexport const Calendar: React.FC<CalendarProps> = ({\n  dateSetup,\n  locale,\n  viewMode,\n  rtl,\n  headerHeight,\n  columnWidth,\n  fontFamily,\n  fontSize,\n}) => {\n  const getCalendarValuesForMonth = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const topDefaultHeight = headerHeight * 0.5;\n    for (let i = 0; i < dateSetup.dates.length; i++) {\n      const date = dateSetup.dates[i];\n      const bottomValue = getLocaleMonth(date, locale);\n      bottomValues.push(\n        <text\n          key={bottomValue + date.getFullYear()}\n          y={headerHeight * 0.8}\n          x={columnWidth * i + columnWidth * 0.5}\n          className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (\n        i === 0 ||\n        date.getFullYear() !== dateSetup.dates[i - 1].getFullYear()\n      ) {\n        const topValue = date.getFullYear().toString();\n        let xText: number;\n        if (rtl) {\n          xText = (6 + i + date.getMonth() + 1) * columnWidth;\n        } else {\n          xText = (6 + i - date.getMonth()) * columnWidth;\n        }\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue}\n            value={topValue}\n            x1Line={columnWidth * i}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={xText}\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForWeek = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    let weeksCount: number = 1;\n    const topDefaultHeight = headerHeight * 0.5;\n    const dates = dateSetup.dates;\n    for (let i = dates.length - 1; i >= 0; i--) {\n      const date = dates[i];\n      let topValue = \"\";\n      if (i === 0 || date.getMonth() !== dates[i - 1].getMonth()) {\n        // top\n        topValue = `${getLocaleMonth(date, locale)}, ${date.getFullYear()}`;\n      }\n      // bottom\n      const bottomValue = `W${getWeekNumberISO8601(date)}`;\n\n      bottomValues.push(\n        <text\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * (i + +rtl)}\n          className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </text>\n      );\n\n      if (topValue) {\n        // if last day is new month\n        if (i !== dates.length - 1) {\n          topValues.push(\n            <TopPartOfCalendar\n              key={topValue}\n              value={topValue}\n              x1Line={columnWidth * i + weeksCount * columnWidth}\n              y1Line={0}\n              y2Line={topDefaultHeight}\n              xText={columnWidth * i + columnWidth * weeksCount * 0.5}\n              yText={topDefaultHeight * 0.9}\n            />\n          );\n        }\n        weeksCount = 0;\n      }\n      weeksCount++;\n    }\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForDay = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const topDefaultHeight = headerHeight * 0.5;\n    const dates = dateSetup.dates;\n    for (let i = 0; i < dates.length; i++) {\n      const date = dates[i];\n      const bottomValue = date.getDate().toString();\n\n      bottomValues.push(\n        <text\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * i + columnWidth * 0.5}\n          className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (\n        i + 1 !== dates.length &&\n        date.getMonth() !== dates[i + 1].getMonth()\n      ) {\n        const topValue = getLocaleMonth(date, locale);\n\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue + date.getFullYear()}\n            value={topValue}\n            x1Line={columnWidth * (i + 1)}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={\n              columnWidth * (i + 1) -\n              getDaysInMonth(date.getMonth(), date.getFullYear()) *\n                columnWidth *\n                0.5\n            }\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForOther = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const ticks = viewMode === ViewMode.HalfDay ? 2 : 4;\n    const topDefaultHeight = headerHeight * 0.5;\n    const dates = dateSetup.dates;\n    for (let i = 0; i < dates.length; i++) {\n      const date = dates[i];\n      const bottomValue = getCachedDateTimeFormat(locale, {\n        hour: \"numeric\",\n      }).format(date);\n\n      bottomValues.push(\n        <text\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * (i + +rtl)}\n          className={styles.calendarBottomText}\n          fontFamily={fontFamily}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (i === 0 || date.getDate() !== dates[i - 1].getDate()) {\n        const topValue = `${date.getDate()} ${getLocaleMonth(date, locale)}`;\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue + date.getFullYear()}\n            value={topValue}\n            x1Line={columnWidth * i + ticks * columnWidth}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={columnWidth * i + ticks * columnWidth * 0.5}\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n\n    return [topValues, bottomValues];\n  };\n\n  let topValues: ReactChild[] = [];\n  let bottomValues: ReactChild[] = [];\n  switch (dateSetup.viewMode) {\n    case ViewMode.Month:\n      [topValues, bottomValues] = getCalendarValuesForMonth();\n      break;\n    case ViewMode.Week:\n      [topValues, bottomValues] = getCalendarValuesForWeek();\n      break;\n    case ViewMode.Day:\n      [topValues, bottomValues] = getCalendarValuesForDay();\n      break;\n    default:\n      [topValues, bottomValues] = getCalendarValuesForOther();\n      break;\n  }\n  return (\n    <g className=\"calendar\" fontSize={fontSize} fontFamily={fontFamily}>\n      <rect\n        x={0}\n        y={0}\n        width={columnWidth * dateSetup.dates.length}\n        height={headerHeight}\n        className={styles.calendarHeader}\n      />\n      {bottomValues} {topValues}\n    </g>\n  );\n};\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import React from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\n\ntype ArrowProps = {\n  taskFrom: BarTask;\n  taskTo: BarTask;\n  rowHeight: number;\n  taskHeight: number;\n  arrowIndent: number;\n  rtl: boolean;\n};\nexport const Arrow: React.FC<ArrowProps> = ({\n  taskFrom,\n  taskTo,\n  rowHeight,\n  taskHeight,\n  arrowIndent,\n  rtl,\n}) => {\n  let path: string;\n  let trianglePoints: string;\n  if (rtl) {\n    [path, trianglePoints] = drownPathAndTriangleRTL(\n      taskFrom,\n      taskTo,\n      rowHeight,\n      taskHeight,\n      arrowIndent\n    );\n  } else {\n    [path, trianglePoints] = drownPathAndTriangle(\n      taskFrom,\n      taskTo,\n      rowHeight,\n      taskHeight,\n      arrowIndent\n    );\n  }\n\n  return (\n    <g className=\"arrow\">\n      <path strokeWidth=\"1.5\" d={path} fill=\"none\" />\n      <polygon points={trianglePoints} />\n    </g>\n  );\n};\n\nconst drownPathAndTriangle = (\n  taskFrom: BarTask,\n  taskTo: BarTask,\n  rowHeight: number,\n  taskHeight: number,\n  arrowIndent: number\n) => {\n  const indexCompare = taskFrom.index > taskTo.index ? -1 : 1;\n  const taskToEndPosition = taskTo.y + taskHeight / 2;\n  const taskFromEndPosition = taskFrom.x2 + arrowIndent * 2;\n  const taskFromHorizontalOffsetValue =\n    taskFromEndPosition < taskTo.x1 ? \"\" : `H ${taskTo.x1 - arrowIndent}`;\n  const taskToHorizontalOffsetValue =\n    taskFromEndPosition > taskTo.x1\n      ? arrowIndent\n      : taskTo.x1 - taskFrom.x2 - arrowIndent;\n\n  const path = `M ${taskFrom.x2} ${taskFrom.y + taskHeight / 2} \n  h ${arrowIndent} \n  v ${(indexCompare * rowHeight) / 2} \n  ${taskFromHorizontalOffsetValue}\n  V ${taskToEndPosition} \n  h ${taskToHorizontalOffsetValue}`;\n\n  const trianglePoints = `${taskTo.x1},${taskToEndPosition} \n  ${taskTo.x1 - 5},${taskToEndPosition - 5} \n  ${taskTo.x1 - 5},${taskToEndPosition + 5}`;\n  return [path, trianglePoints];\n};\n\nconst drownPathAndTriangleRTL = (\n  taskFrom: BarTask,\n  taskTo: BarTask,\n  rowHeight: number,\n  taskHeight: number,\n  arrowIndent: number\n) => {\n  const indexCompare = taskFrom.index > taskTo.index ? -1 : 1;\n  const taskToEndPosition = taskTo.y + taskHeight / 2;\n  const taskFromEndPosition = taskFrom.x1 - arrowIndent * 2;\n  const taskFromHorizontalOffsetValue =\n    taskFromEndPosition > taskTo.x2 ? \"\" : `H ${taskTo.x2 + arrowIndent}`;\n  const taskToHorizontalOffsetValue =\n    taskFromEndPosition < taskTo.x2\n      ? -arrowIndent\n      : taskTo.x2 - taskFrom.x1 + arrowIndent;\n\n  const path = `M ${taskFrom.x1} ${taskFrom.y + taskHeight / 2} \n  h ${-arrowIndent} \n  v ${(indexCompare * rowHeight) / 2} \n  ${taskFromHorizontalOffsetValue}\n  V ${taskToEndPosition} \n  h ${taskToHorizontalOffsetValue}`;\n\n  const trianglePoints = `${taskTo.x2},${taskToEndPosition} \n  ${taskTo.x2 + 5},${taskToEndPosition + 5} \n  ${taskTo.x2 + 5},${taskToEndPosition - 5}`;\n  return [path, trianglePoints];\n};\n","import { Task } from \"../types/public-types\";\nimport { BarTask, TaskTypeInternal } from \"../types/bar-task\";\nimport { BarMoveAction } from \"../types/gantt-task-actions\";\n\nexport const convertToBarTasks = (\n  tasks: Task[],\n  dates: Date[],\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string,\n  projectProgressColor: string,\n  projectProgressSelectedColor: string,\n  projectBackgroundColor: string,\n  projectBackgroundSelectedColor: string,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n) => {\n  const dateDelta =\n    dates[1].getTime() -\n    dates[0].getTime() -\n    dates[1].getTimezoneOffset() * 60 * 1000 +\n    dates[0].getTimezoneOffset() * 60 * 1000;\n  let barTasks = tasks.map((t, i) => {\n    return convertToBarTask(\n      t,\n      i,\n      dates,\n      dateDelta,\n      columnWidth,\n      rowHeight,\n      taskHeight,\n      barCornerRadius,\n      handleWidth,\n      rtl,\n      barProgressColor,\n      barProgressSelectedColor,\n      barBackgroundColor,\n      barBackgroundSelectedColor,\n      projectProgressColor,\n      projectProgressSelectedColor,\n      projectBackgroundColor,\n      projectBackgroundSelectedColor,\n      milestoneBackgroundColor,\n      milestoneBackgroundSelectedColor\n    );\n  });\n\n  // set dependencies\n  barTasks = barTasks.map(task => {\n    const dependencies = task.dependencies || [];\n    for (let j = 0; j < dependencies.length; j++) {\n      const dependence = barTasks.findIndex(\n        value => value.id === dependencies[j]\n      );\n      if (dependence !== -1) barTasks[dependence].barChildren.push(task);\n    }\n    return task;\n  });\n\n  return barTasks;\n};\n\nconst convertToBarTask = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string,\n  projectProgressColor: string,\n  projectProgressSelectedColor: string,\n  projectBackgroundColor: string,\n  projectBackgroundSelectedColor: string,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n): BarTask => {\n  let barTask: BarTask;\n  switch (task.type) {\n    case \"milestone\":\n      barTask = convertToMilestone(\n        task,\n        index,\n        dates,\n        dateDelta,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        milestoneBackgroundColor,\n        milestoneBackgroundSelectedColor\n      );\n      break;\n    case \"project\":\n      barTask = convertToBar(\n        task,\n        index,\n        dates,\n        dateDelta,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        projectProgressColor,\n        projectProgressSelectedColor,\n        projectBackgroundColor,\n        projectBackgroundSelectedColor\n      );\n      break;\n    default:\n      barTask = convertToBar(\n        task,\n        index,\n        dates,\n        dateDelta,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        barProgressColor,\n        barProgressSelectedColor,\n        barBackgroundColor,\n        barBackgroundSelectedColor\n      );\n      break;\n  }\n  return barTask;\n};\n\nconst convertToBar = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string\n): BarTask => {\n  let x1: number;\n  let x2: number;\n  if (rtl) {\n    x2 = taskXCoordinateRTL(task.start, dates, dateDelta, columnWidth);\n    x1 = taskXCoordinateRTL(task.end, dates, dateDelta, columnWidth);\n  } else {\n    x1 = taskXCoordinate(task.start, dates, dateDelta, columnWidth);\n    x2 = taskXCoordinate(task.end, dates, dateDelta, columnWidth);\n  }\n  let typeInternal: TaskTypeInternal = task.type;\n  if (typeInternal === \"task\" && x2 - x1 < handleWidth * 2) {\n    typeInternal = \"smalltask\";\n    x2 = x1 + handleWidth * 2;\n  }\n\n  const [progressWidth, progressX] = progressWithByParams(\n    x1,\n    x2,\n    task.progress,\n    rtl\n  );\n  const y = taskYCoordinate(index, rowHeight, taskHeight);\n  const hideChildren = task.type === \"project\" ? task.hideChildren : undefined;\n\n  const styles = {\n    backgroundColor: barBackgroundColor,\n    backgroundSelectedColor: barBackgroundSelectedColor,\n    progressColor: barProgressColor,\n    progressSelectedColor: barProgressSelectedColor,\n    ...task.styles,\n  };\n  return {\n    ...task,\n    typeInternal,\n    x1,\n    x2,\n    y,\n    index,\n    progressX,\n    progressWidth,\n    barCornerRadius,\n    handleWidth,\n    hideChildren,\n    height: taskHeight,\n    barChildren: [],\n    styles,\n  };\n};\n\nconst convertToMilestone = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n): BarTask => {\n  const x = taskXCoordinate(task.start, dates, dateDelta, columnWidth);\n  const y = taskYCoordinate(index, rowHeight, taskHeight);\n\n  const x1 = x - taskHeight * 0.5;\n  const x2 = x + taskHeight * 0.5;\n\n  const rotatedHeight = taskHeight / 1.414;\n  const styles = {\n    backgroundColor: milestoneBackgroundColor,\n    backgroundSelectedColor: milestoneBackgroundSelectedColor,\n    progressColor: \"\",\n    progressSelectedColor: \"\",\n    ...task.styles,\n  };\n  return {\n    ...task,\n    end: task.start,\n    x1,\n    x2,\n    y,\n    index,\n    progressX: 0,\n    progressWidth: 0,\n    barCornerRadius,\n    handleWidth,\n    typeInternal: task.type,\n    progress: 0,\n    height: rotatedHeight,\n    hideChildren: undefined,\n    barChildren: [],\n    styles,\n  };\n};\n\nconst taskXCoordinate = (\n  xDate: Date,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number\n) => {\n  const index = ~~(\n    (xDate.getTime() -\n      dates[0].getTime() +\n      xDate.getTimezoneOffset() -\n      dates[0].getTimezoneOffset()) /\n    dateDelta\n  );\n  const x = Math.round(\n    (index +\n      (xDate.getTime() -\n        dates[index].getTime() -\n        xDate.getTimezoneOffset() * 60 * 1000 +\n        dates[index].getTimezoneOffset() * 60 * 1000) /\n        dateDelta) *\n      columnWidth\n  );\n  return x;\n};\nconst taskXCoordinateRTL = (\n  xDate: Date,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number\n) => {\n  let x = taskXCoordinate(xDate, dates, dateDelta, columnWidth);\n  x += columnWidth;\n  return x;\n};\nconst taskYCoordinate = (\n  index: number,\n  rowHeight: number,\n  taskHeight: number\n) => {\n  const y = index * rowHeight + (rowHeight - taskHeight) / 2;\n  return y;\n};\n\nexport const progressWithByParams = (\n  taskX1: number,\n  taskX2: number,\n  progress: number,\n  rtl: boolean\n) => {\n  const progressWidth = (taskX2 - taskX1) * progress * 0.01;\n  let progressX: number;\n  if (rtl) {\n    progressX = taskX2 - progressWidth;\n  } else {\n    progressX = taskX1;\n  }\n  return [progressWidth, progressX];\n};\n\nexport const progressByProgressWidth = (\n  progressWidth: number,\n  barTask: BarTask\n) => {\n  const barWidth = barTask.x2 - barTask.x1;\n  const progressPercent = Math.round((progressWidth * 100) / barWidth);\n  if (progressPercent >= 100) return 100;\n  else if (progressPercent <= 0) return 0;\n  else return progressPercent;\n};\n\nconst progressByX = (x: number, task: BarTask) => {\n  if (x >= task.x2) return 100;\n  else if (x <= task.x1) return 0;\n  else {\n    const barWidth = task.x2 - task.x1;\n    const progressPercent = Math.round(((x - task.x1) * 100) / barWidth);\n    return progressPercent;\n  }\n};\nconst progressByXRTL = (x: number, task: BarTask) => {\n  if (x >= task.x2) return 0;\n  else if (x <= task.x1) return 100;\n  else {\n    const barWidth = task.x2 - task.x1;\n    const progressPercent = Math.round(((task.x2 - x) * 100) / barWidth);\n    return progressPercent;\n  }\n};\n\nexport const getProgressPoint = (\n  progressX: number,\n  taskY: number,\n  taskHeight: number\n) => {\n  const point = [\n    progressX - 5,\n    taskY + taskHeight,\n    progressX + 5,\n    taskY + taskHeight,\n    progressX,\n    taskY + taskHeight - 8.66,\n  ];\n  return point.join(\",\");\n};\n\nconst startByX = (x: number, xStep: number, task: BarTask) => {\n  if (x >= task.x2 - task.handleWidth * 2) {\n    x = task.x2 - task.handleWidth * 2;\n  }\n  const steps = Math.round((x - task.x1) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX = task.x1 + additionalXValue;\n  return newX;\n};\n\nconst endByX = (x: number, xStep: number, task: BarTask) => {\n  if (x <= task.x1 + task.handleWidth * 2) {\n    x = task.x1 + task.handleWidth * 2;\n  }\n  const steps = Math.round((x - task.x2) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX = task.x2 + additionalXValue;\n  return newX;\n};\n\nconst moveByX = (x: number, xStep: number, task: BarTask) => {\n  const steps = Math.round((x - task.x1) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX1 = task.x1 + additionalXValue;\n  const newX2 = newX1 + task.x2 - task.x1;\n  return [newX1, newX2];\n};\n\nconst dateByX = (\n  x: number,\n  taskX: number,\n  taskDate: Date,\n  xStep: number,\n  timeStep: number\n) => {\n  let newDate = new Date(((x - taskX) / xStep) * timeStep + taskDate.getTime());\n  newDate = new Date(\n    newDate.getTime() +\n      (newDate.getTimezoneOffset() - taskDate.getTimezoneOffset()) * 60000\n  );\n  return newDate;\n};\n\n/**\n * Method handles event in real time(mousemove) and on finish(mouseup)\n */\nexport const handleTaskBySVGMouseEvent = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number,\n  rtl: boolean\n): { isChanged: boolean; changedTask: BarTask } => {\n  let result: { isChanged: boolean; changedTask: BarTask };\n  switch (selectedTask.type) {\n    case \"milestone\":\n      result = handleTaskBySVGMouseEventForMilestone(\n        svgX,\n        action,\n        selectedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta\n      );\n      break;\n    default:\n      result = handleTaskBySVGMouseEventForBar(\n        svgX,\n        action,\n        selectedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n      break;\n  }\n  return result;\n};\n\nconst handleTaskBySVGMouseEventForBar = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number,\n  rtl: boolean\n): { isChanged: boolean; changedTask: BarTask } => {\n  const changedTask: BarTask = { ...selectedTask };\n  let isChanged = false;\n  switch (action) {\n    case \"progress\":\n      if (rtl) {\n        changedTask.progress = progressByXRTL(svgX, selectedTask);\n      } else {\n        changedTask.progress = progressByX(svgX, selectedTask);\n      }\n      isChanged = changedTask.progress !== selectedTask.progress;\n      if (isChanged) {\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    case \"start\": {\n      const newX1 = startByX(svgX, xStep, selectedTask);\n      changedTask.x1 = newX1;\n      isChanged = changedTask.x1 !== selectedTask.x1;\n      if (isChanged) {\n        if (rtl) {\n          changedTask.end = dateByX(\n            newX1,\n            selectedTask.x1,\n            selectedTask.end,\n            xStep,\n            timeStep\n          );\n        } else {\n          changedTask.start = dateByX(\n            newX1,\n            selectedTask.x1,\n            selectedTask.start,\n            xStep,\n            timeStep\n          );\n        }\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n    case \"end\": {\n      const newX2 = endByX(svgX, xStep, selectedTask);\n      changedTask.x2 = newX2;\n      isChanged = changedTask.x2 !== selectedTask.x2;\n      if (isChanged) {\n        if (rtl) {\n          changedTask.start = dateByX(\n            newX2,\n            selectedTask.x2,\n            selectedTask.start,\n            xStep,\n            timeStep\n          );\n        } else {\n          changedTask.end = dateByX(\n            newX2,\n            selectedTask.x2,\n            selectedTask.end,\n            xStep,\n            timeStep\n          );\n        }\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n    case \"move\": {\n      const [newMoveX1, newMoveX2] = moveByX(\n        svgX - initEventX1Delta,\n        xStep,\n        selectedTask\n      );\n      isChanged = newMoveX1 !== selectedTask.x1;\n      if (isChanged) {\n        changedTask.start = dateByX(\n          newMoveX1,\n          selectedTask.x1,\n          selectedTask.start,\n          xStep,\n          timeStep\n        );\n        changedTask.end = dateByX(\n          newMoveX2,\n          selectedTask.x2,\n          selectedTask.end,\n          xStep,\n          timeStep\n        );\n        changedTask.x1 = newMoveX1;\n        changedTask.x2 = newMoveX2;\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n  }\n  return { isChanged, changedTask };\n};\n\nconst handleTaskBySVGMouseEventForMilestone = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number\n): { isChanged: boolean; changedTask: BarTask } => {\n  const changedTask: BarTask = { ...selectedTask };\n  let isChanged = false;\n  switch (action) {\n    case \"move\": {\n      const [newMoveX1, newMoveX2] = moveByX(\n        svgX - initEventX1Delta,\n        xStep,\n        selectedTask\n      );\n      isChanged = newMoveX1 !== selectedTask.x1;\n      if (isChanged) {\n        changedTask.start = dateByX(\n          newMoveX1,\n          selectedTask.x1,\n          selectedTask.start,\n          xStep,\n          timeStep\n        );\n        changedTask.end = changedTask.start;\n        changedTask.x1 = newMoveX1;\n        changedTask.x2 = newMoveX2;\n      }\n      break;\n    }\n  }\n  return { isChanged, changedTask };\n};\n","import { BarTask } from \"../types/bar-task\";\nimport { Task } from \"../types/public-types\";\n\nexport function isKeyboardEvent(\n  event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent\n): event is React.KeyboardEvent {\n  return (event as React.KeyboardEvent).key !== undefined;\n}\n\nexport function isMouseEvent(\n  event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent\n): event is React.MouseEvent {\n  return (event as React.MouseEvent).clientX !== undefined;\n}\n\nexport function isBarTask(task: Task | BarTask): task is BarTask {\n  return (task as BarTask).x1 !== undefined;\n}\n\nexport function removeHiddenTasks(tasks: Task[]) {\n  const groupedTasks = tasks.filter(\n    t => t.hideChildren && t.type === \"project\"\n  );\n  if (groupedTasks.length > 0) {\n    for (let i = 0; groupedTasks.length > i; i++) {\n      const groupedTask = groupedTasks[i];\n      const children = getChildren(tasks, groupedTask);\n      tasks = tasks.filter(t => children.indexOf(t) === -1);\n    }\n  }\n  return tasks;\n}\n\nfunction getChildren(taskList: Task[], task: Task) {\n  let tasks: Task[] = [];\n  if (task.type !== \"project\") {\n    tasks = taskList.filter(\n      t => t.dependencies && t.dependencies.indexOf(task.id) !== -1\n    );\n  } else {\n    tasks = taskList.filter(t => t.project && t.project === task.id);\n  }\n  const taskChildren = tasks.reduce(\n    (children: Task[], t) =>\n      children.concat(children, getChildren(taskList, t)),\n    []\n  );\n  tasks = tasks.concat(tasks, taskChildren);\n  return tasks;\n}\n","import React from \"react\";\nimport style from \"./bar.module.css\";\n\ntype BarDisplayProps = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  isSelected: boolean;\n  /* progress start point */\n  progressX: number;\n  progressWidth: number;\n  barCornerRadius: number;\n  styles: {\n    backgroundColor: string;\n    backgroundSelectedColor: string;\n    progressColor: string;\n    progressSelectedColor: string;\n  };\n  onMouseDown: (event: React.MouseEvent<SVGPolygonElement, MouseEvent>) => void;\n};\nexport const BarDisplay: React.FC<BarDisplayProps> = ({\n  x,\n  y,\n  width,\n  height,\n  isSelected,\n  progressX,\n  progressWidth,\n  barCornerRadius,\n  styles,\n  onMouseDown,\n}) => {\n  const getProcessColor = () => {\n    return isSelected ? styles.progressSelectedColor : styles.progressColor;\n  };\n\n  const getBarColor = () => {\n    return isSelected ? styles.backgroundSelectedColor : styles.backgroundColor;\n  };\n\n  return (\n    <g onMouseDown={onMouseDown}>\n      <rect\n        x={x}\n        width={width}\n        y={y}\n        height={height}\n        ry={barCornerRadius}\n        rx={barCornerRadius}\n        fill={getBarColor()}\n        className={style.barBackground}\n      />\n      <rect\n        x={progressX}\n        width={progressWidth}\n        y={y}\n        height={height}\n        ry={barCornerRadius}\n        rx={barCornerRadius}\n        fill={getProcessColor()}\n      />\n    </g>\n  );\n};\n","import React from \"react\";\nimport styles from \"./bar.module.css\";\n\ntype BarDateHandleProps = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  barCornerRadius: number;\n  onMouseDown: (event: React.MouseEvent<SVGRectElement, MouseEvent>) => void;\n};\nexport const BarDateHandle: React.FC<BarDateHandleProps> = ({\n  x,\n  y,\n  width,\n  height,\n  barCornerRadius,\n  onMouseDown,\n}) => {\n  return (\n    <rect\n      x={x}\n      y={y}\n      width={width}\n      height={height}\n      className={styles.barHandle}\n      ry={barCornerRadius}\n      rx={barCornerRadius}\n      onMouseDown={onMouseDown}\n    />\n  );\n};\n","import React from \"react\";\nimport styles from \"./bar.module.css\";\n\ntype BarProgressHandleProps = {\n  progressPoint: string;\n  onMouseDown: (event: React.MouseEvent<SVGPolygonElement, MouseEvent>) => void;\n};\nexport const BarProgressHandle: React.FC<BarProgressHandleProps> = ({\n  progressPoint,\n  onMouseDown,\n}) => {\n  return (\n    <polygon\n      className={styles.barHandle}\n      points={progressPoint}\n      onMouseDown={onMouseDown}\n    />\n  );\n};\n","import React from \"react\";\nimport { getProgressPoint } from \"../../../helpers/bar-helper\";\nimport { BarDisplay } from \"./bar-display\";\nimport { BarDateHandle } from \"./bar-date-handle\";\nimport { BarProgressHandle } from \"./bar-progress-handle\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./bar.module.css\";\n\nexport const Bar: React.FC<TaskItemProps> = ({\n  task,\n  isProgressChangeable,\n  isDateChangeable,\n  rtl,\n  onEventStart,\n  isSelected,\n}) => {\n  const progressPoint = getProgressPoint(\n    +!rtl * task.progressWidth + task.progressX,\n    task.y,\n    task.height\n  );\n  const handleHeight = task.height - 2;\n  return (\n    <g className={styles.barWrapper} tabIndex={0}>\n      <BarDisplay\n        x={task.x1}\n        y={task.y}\n        width={task.x2 - task.x1}\n        height={task.height}\n        progressX={task.progressX}\n        progressWidth={task.progressWidth}\n        barCornerRadius={task.barCornerRadius}\n        styles={task.styles}\n        isSelected={isSelected}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n      <g className=\"handleGroup\">\n        {isDateChangeable && (\n          <g>\n            {/* left */}\n            <BarDateHandle\n              x={task.x1 + 1}\n              y={task.y + 1}\n              width={task.handleWidth}\n              height={handleHeight}\n              barCornerRadius={task.barCornerRadius}\n              onMouseDown={e => {\n                onEventStart(\"start\", task, e);\n              }}\n            />\n            {/* right */}\n            <BarDateHandle\n              x={task.x2 - task.handleWidth - 1}\n              y={task.y + 1}\n              width={task.handleWidth}\n              height={handleHeight}\n              barCornerRadius={task.barCornerRadius}\n              onMouseDown={e => {\n                onEventStart(\"end\", task, e);\n              }}\n            />\n          </g>\n        )}\n        {isProgressChangeable && (\n          <BarProgressHandle\n            progressPoint={progressPoint}\n            onMouseDown={e => {\n              onEventStart(\"progress\", task, e);\n            }}\n          />\n        )}\n      </g>\n    </g>\n  );\n};\n","import React from \"react\";\nimport { getProgressPoint } from \"../../../helpers/bar-helper\";\nimport { BarDisplay } from \"./bar-display\";\nimport { BarProgressHandle } from \"./bar-progress-handle\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./bar.module.css\";\n\nexport const BarSmall: React.FC<TaskItemProps> = ({\n  task,\n  isProgressChangeable,\n  isDateChangeable,\n  onEventStart,\n  isSelected,\n}) => {\n  const progressPoint = getProgressPoint(\n    task.progressWidth + task.x1,\n    task.y,\n    task.height\n  );\n  return (\n    <g className={styles.barWrapper} tabIndex={0}>\n      <BarDisplay\n        x={task.x1}\n        y={task.y}\n        width={task.x2 - task.x1}\n        height={task.height}\n        progressX={task.progressX}\n        progressWidth={task.progressWidth}\n        barCornerRadius={task.barCornerRadius}\n        styles={task.styles}\n        isSelected={isSelected}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n      <g className=\"handleGroup\">\n        {isProgressChangeable && (\n          <BarProgressHandle\n            progressPoint={progressPoint}\n            onMouseDown={e => {\n              onEventStart(\"progress\", task, e);\n            }}\n          />\n        )}\n      </g>\n    </g>\n  );\n};\n","import React from \"react\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./milestone.module.css\";\n\nexport const Milestone: React.FC<TaskItemProps> = ({\n  task,\n  isDateChangeable,\n  onEventStart,\n  isSelected,\n}) => {\n  const transform = `rotate(45 ${task.x1 + task.height * 0.356} \n    ${task.y + task.height * 0.85})`;\n  const getBarColor = () => {\n    return isSelected\n      ? task.styles.backgroundSelectedColor\n      : task.styles.backgroundColor;\n  };\n\n  return (\n    <g tabIndex={0} className={styles.milestoneWrapper}>\n      <rect\n        fill={getBarColor()}\n        x={task.x1}\n        width={task.height}\n        y={task.y}\n        height={task.height}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        transform={transform}\n        className={styles.milestoneBackground}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n    </g>\n  );\n};\n","import React from \"react\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./project.module.css\";\n\nexport const Project: React.FC<TaskItemProps> = ({ task, isSelected }) => {\n  const barColor = isSelected\n    ? task.styles.backgroundSelectedColor\n    : task.styles.backgroundColor;\n  const processColor = isSelected\n    ? task.styles.progressSelectedColor\n    : task.styles.progressColor;\n  const projectWith = task.x2 - task.x1;\n\n  const projectLeftTriangle = [\n    task.x1,\n    task.y + task.height / 2 - 1,\n    task.x1,\n    task.y + task.height,\n    task.x1 + 15,\n    task.y + task.height / 2 - 1,\n  ].join(\",\");\n  const projectRightTriangle = [\n    task.x2,\n    task.y + task.height / 2 - 1,\n    task.x2,\n    task.y + task.height,\n    task.x2 - 15,\n    task.y + task.height / 2 - 1,\n  ].join(\",\");\n\n  return (\n    <g tabIndex={0} className={styles.projectWrapper}>\n      <rect\n        fill={barColor}\n        x={task.x1}\n        width={projectWith}\n        y={task.y}\n        height={task.height}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        className={styles.projectBackground}\n      />\n      <rect\n        x={task.progressX}\n        width={task.progressWidth}\n        y={task.y}\n        height={task.height}\n        ry={task.barCornerRadius}\n        rx={task.barCornerRadius}\n        fill={processColor}\n      />\n      <rect\n        fill={barColor}\n        x={task.x1}\n        width={projectWith}\n        y={task.y}\n        height={task.height / 2}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        className={styles.projectTop}\n      />\n      <polygon\n        className={styles.projectTop}\n        points={projectLeftTriangle}\n        fill={barColor}\n      />\n      <polygon\n        className={styles.projectTop}\n        points={projectRightTriangle}\n        fill={barColor}\n      />\n    </g>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { GanttContentMoveAction } from \"../../types/gantt-task-actions\";\nimport { Bar } from \"./bar/bar\";\nimport { BarSmall } from \"./bar/bar-small\";\nimport { Milestone } from \"./milestone/milestone\";\nimport { Project } from \"./project/project\";\nimport style from \"./task-list.module.css\";\n\nexport type TaskItemProps = {\n  task: BarTask;\n  arrowIndent: number;\n  taskHeight: number;\n  isProgressChangeable: boolean;\n  isDateChangeable: boolean;\n  isDelete: boolean;\n  isSelected: boolean;\n  rtl: boolean;\n  onEventStart: (\n    action: GanttContentMoveAction,\n    selectedTask: BarTask,\n    event?: React.MouseEvent | React.KeyboardEvent\n  ) => any;\n};\n\nexport const TaskItem: React.FC<TaskItemProps> = props => {\n  const {\n    task,\n    arrowIndent,\n    isDelete,\n    taskHeight,\n    isSelected,\n    rtl,\n    onEventStart,\n  } = {\n    ...props,\n  };\n  const textRef = useRef<SVGTextElement>(null);\n  const [taskItem, setTaskItem] = useState<JSX.Element>(<div />);\n  const [isTextInside, setIsTextInside] = useState(true);\n\n  useEffect(() => {\n    switch (task.typeInternal) {\n      case \"milestone\":\n        setTaskItem(<Milestone {...props} />);\n        break;\n      case \"project\":\n        setTaskItem(<Project {...props} />);\n        break;\n      case \"smalltask\":\n        setTaskItem(<BarSmall {...props} />);\n        break;\n      default:\n        setTaskItem(<Bar {...props} />);\n        break;\n    }\n  }, [task, isSelected]);\n\n  useEffect(() => {\n    if (textRef.current) {\n      setIsTextInside(textRef.current.getBBox().width < task.x2 - task.x1);\n    }\n  }, [textRef, task]);\n\n  const getX = () => {\n    const width = task.x2 - task.x1;\n    const hasChild = task.barChildren.length > 0;\n    if (isTextInside) {\n      return task.x1 + width * 0.5;\n    }\n    if (rtl && textRef.current) {\n      return (\n        task.x1 -\n        textRef.current.getBBox().width -\n        arrowIndent * +hasChild -\n        arrowIndent * 0.2\n      );\n    } else {\n      return task.x1 + width + arrowIndent * +hasChild + arrowIndent * 0.2;\n    }\n  };\n\n  return (\n    <g\n      onKeyDown={e => {\n        switch (e.key) {\n          case \"Delete\": {\n            if (isDelete) onEventStart(\"delete\", task, e);\n            break;\n          }\n        }\n        e.stopPropagation();\n      }}\n      onMouseEnter={e => {\n        onEventStart(\"mouseenter\", task, e);\n      }}\n      onMouseLeave={e => {\n        onEventStart(\"mouseleave\", task, e);\n      }}\n      onDoubleClick={e => {\n        onEventStart(\"dblclick\", task, e);\n      }}\n      onFocus={() => {\n        onEventStart(\"select\", task);\n      }}\n    >\n      {taskItem}\n      <text\n        x={getX()}\n        y={task.y + taskHeight * 0.5}\n        className={\n          isTextInside\n            ? style.barLabel\n            : style.barLabel && style.barLabelOutside\n        }\n        ref={textRef}\n      >\n        {task.name}\n      </text>\n    </g>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { EventOption } from \"../../types/public-types\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { Arrow } from \"../other/arrow\";\nimport { handleTaskBySVGMouseEvent } from \"../../helpers/bar-helper\";\nimport { isKeyboardEvent } from \"../../helpers/other-helper\";\nimport { TaskItem } from \"../task-item/task-item\";\nimport {\n  BarMoveAction,\n  GanttContentMoveAction,\n  GanttEvent,\n} from \"../../types/gantt-task-actions\";\n\nexport type TaskGanttContentProps = {\n  tasks: BarTask[];\n  dates: Date[];\n  ganttEvent: GanttEvent;\n  selectedTask: BarTask | undefined;\n  rowHeight: number;\n  columnWidth: number;\n  timeStep: number;\n  svg?: React.RefObject<SVGSVGElement>;\n  svgWidth: number;\n  taskHeight: number;\n  arrowColor: string;\n  arrowIndent: number;\n  fontSize: string;\n  fontFamily: string;\n  rtl: boolean;\n  setGanttEvent: (value: GanttEvent) => void;\n  setFailedTask: (value: BarTask | null) => void;\n  setSelectedTask: (taskId: string) => void;\n} & EventOption;\n\nexport const TaskGanttContent: React.FC<TaskGanttContentProps> = ({\n  tasks,\n  dates,\n  ganttEvent,\n  selectedTask,\n  rowHeight,\n  columnWidth,\n  timeStep,\n  svg,\n  taskHeight,\n  arrowColor,\n  arrowIndent,\n  fontFamily,\n  fontSize,\n  rtl,\n  setGanttEvent,\n  setFailedTask,\n  setSelectedTask,\n  onDateChange,\n  onProgressChange,\n  onDoubleClick,\n  onDelete,\n}) => {\n  const point = svg?.current?.createSVGPoint();\n  const [xStep, setXStep] = useState(0);\n  const [initEventX1Delta, setInitEventX1Delta] = useState(0);\n  const [isMoving, setIsMoving] = useState(false);\n\n  // create xStep\n  useEffect(() => {\n    const dateDelta =\n      dates[1].getTime() -\n      dates[0].getTime() -\n      dates[1].getTimezoneOffset() * 60 * 1000 +\n      dates[0].getTimezoneOffset() * 60 * 1000;\n    const newXStep = (timeStep * columnWidth) / dateDelta;\n    setXStep(newXStep);\n  }, [columnWidth, dates, timeStep]);\n\n  useEffect(() => {\n    const handleMouseMove = async (event: MouseEvent) => {\n      if (!ganttEvent.changedTask || !point || !svg?.current) return;\n      event.preventDefault();\n\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg?.current.getScreenCTM()?.inverse()\n      );\n\n      const { isChanged, changedTask } = handleTaskBySVGMouseEvent(\n        cursor.x,\n        ganttEvent.action as BarMoveAction,\n        ganttEvent.changedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n      if (isChanged) {\n        setGanttEvent({ action: ganttEvent.action, changedTask });\n      }\n    };\n\n    const handleMouseUp = async (event: MouseEvent) => {\n      const { action, originalSelectedTask, changedTask } = ganttEvent;\n      if (!changedTask || !point || !svg?.current || !originalSelectedTask)\n        return;\n      event.preventDefault();\n\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg?.current.getScreenCTM()?.inverse()\n      );\n      const { changedTask: newChangedTask } = handleTaskBySVGMouseEvent(\n        cursor.x,\n        action as BarMoveAction,\n        changedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n\n      const isNotLikeOriginal =\n        originalSelectedTask.start !== newChangedTask.start ||\n        originalSelectedTask.end !== newChangedTask.end ||\n        originalSelectedTask.progress !== newChangedTask.progress;\n\n      // remove listeners\n      svg.current.removeEventListener(\"mousemove\", handleMouseMove);\n      svg.current.removeEventListener(\"mouseup\", handleMouseUp);\n      setGanttEvent({ action: \"\" });\n      setIsMoving(false);\n\n      // custom operation start\n      let operationSuccess = true;\n      if (\n        (action === \"move\" || action === \"end\" || action === \"start\") &&\n        onDateChange &&\n        isNotLikeOriginal\n      ) {\n        try {\n          const result = await onDateChange(\n            newChangedTask,\n            newChangedTask.barChildren\n          );\n          if (result !== undefined) {\n            operationSuccess = result;\n          }\n        } catch (error) {\n          operationSuccess = false;\n        }\n      } else if (onProgressChange && isNotLikeOriginal) {\n        try {\n          const result = await onProgressChange(\n            newChangedTask,\n            newChangedTask.barChildren\n          );\n          if (result !== undefined) {\n            operationSuccess = result;\n          }\n        } catch (error) {\n          operationSuccess = false;\n        }\n      }\n\n      // If operation is failed - return old state\n      if (!operationSuccess) {\n        setFailedTask(originalSelectedTask);\n      }\n    };\n\n    if (\n      !isMoving &&\n      (ganttEvent.action === \"move\" ||\n        ganttEvent.action === \"end\" ||\n        ganttEvent.action === \"start\" ||\n        ganttEvent.action === \"progress\") &&\n      svg?.current\n    ) {\n      svg.current.addEventListener(\"mousemove\", handleMouseMove);\n      svg.current.addEventListener(\"mouseup\", handleMouseUp);\n      setIsMoving(true);\n    }\n  }, [\n    ganttEvent,\n    xStep,\n    initEventX1Delta,\n    onProgressChange,\n    timeStep,\n    onDateChange,\n    svg,\n    isMoving,\n  ]);\n\n  /**\n   * Method is Start point of task change\n   */\n  const handleBarEventStart = async (\n    action: GanttContentMoveAction,\n    task: BarTask,\n    event?: React.MouseEvent | React.KeyboardEvent\n  ) => {\n    if (!event) {\n      if (action === \"select\") {\n        setSelectedTask(task.id);\n      }\n    }\n    // Keyboard events\n    else if (isKeyboardEvent(event)) {\n      if (action === \"delete\") {\n        if (onDelete) {\n          try {\n            const result = await onDelete(task);\n            if (result !== undefined && result) {\n              setGanttEvent({ action, changedTask: task });\n            }\n          } catch (error) {\n            console.error(\"Error on Delete. \" + error);\n          }\n        }\n      }\n    }\n    // Mouse Events\n    else if (action === \"mouseenter\") {\n      if (!ganttEvent.action) {\n        setGanttEvent({\n          action,\n          changedTask: task,\n          originalSelectedTask: task,\n        });\n      }\n    } else if (action === \"mouseleave\") {\n      if (ganttEvent.action === \"mouseenter\") {\n        setGanttEvent({ action: \"\" });\n      }\n    } else if (action === \"dblclick\") {\n      !!onDoubleClick && onDoubleClick(task);\n    }\n    // Change task event start\n    else if (action === \"move\") {\n      if (!svg?.current || !point) return;\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg.current.getScreenCTM()?.inverse()\n      );\n      setInitEventX1Delta(cursor.x - task.x1);\n      setGanttEvent({\n        action,\n        changedTask: task,\n        originalSelectedTask: task,\n      });\n    } else {\n      setGanttEvent({\n        action,\n        changedTask: task,\n        originalSelectedTask: task,\n      });\n    }\n  };\n\n  return (\n    <g className=\"content\">\n      <g className=\"arrows\" fill={arrowColor} stroke={arrowColor}>\n        {tasks.map(task => {\n          return task.barChildren.map(child => {\n            return (\n              <Arrow\n                key={`Arrow from ${task.id} to ${tasks[child.index].id}`}\n                taskFrom={task}\n                taskTo={tasks[child.index]}\n                rowHeight={rowHeight}\n                taskHeight={taskHeight}\n                arrowIndent={arrowIndent}\n                rtl={rtl}\n              />\n            );\n          });\n        })}\n      </g>\n      <g className=\"bar\" fontFamily={fontFamily} fontSize={fontSize}>\n        {tasks.map(task => {\n          return (\n            <TaskItem\n              task={task}\n              arrowIndent={arrowIndent}\n              taskHeight={taskHeight}\n              isProgressChangeable={!!onProgressChange && !task.isDisabled}\n              isDateChangeable={!!onDateChange && !task.isDisabled}\n              isDelete={!task.isDisabled}\n              onEventStart={handleBarEventStart}\n              key={task.id}\n              isSelected={!!selectedTask && task.id === selectedTask.id}\n              rtl={rtl}\n            />\n          );\n        })}\n      </g>\n    </g>\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { GridProps, Grid } from \"../grid/grid\";\nimport { CalendarProps, Calendar } from \"../calendar/calendar\";\nimport { TaskGanttContentProps, TaskGanttContent } from \"./task-gantt-content\";\nimport styles from \"./gantt.module.css\";\n\nexport type TaskGanttProps = {\n  gridProps: GridProps;\n  calendarProps: CalendarProps;\n  barProps: TaskGanttContentProps;\n  ganttHeight: number;\n  scrollY: number;\n  scrollX: number;\n};\nexport const TaskGantt: React.FC<TaskGanttProps> = ({\n  gridProps,\n  calendarProps,\n  barProps,\n  ganttHeight,\n  scrollY,\n  scrollX,\n}) => {\n  const ganttSVGRef = useRef<SVGSVGElement>(null);\n  const horizontalContainerRef = useRef<HTMLDivElement>(null);\n  const verticalGanttContainerRef = useRef<HTMLDivElement>(null);\n  const newBarProps = { ...barProps, svg: ganttSVGRef };\n\n  useEffect(() => {\n    if (horizontalContainerRef.current) {\n      horizontalContainerRef.current.scrollTop = scrollY;\n    }\n  }, [scrollY]);\n\n  useEffect(() => {\n    if (verticalGanttContainerRef.current) {\n      verticalGanttContainerRef.current.scrollLeft = scrollX;\n    }\n  }, [scrollX]);\n\n  return (\n    <div\n      className={styles.ganttVerticalContainer}\n      ref={verticalGanttContainerRef}\n      dir=\"ltr\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={gridProps.svgWidth}\n        height={calendarProps.headerHeight}\n        fontFamily={barProps.fontFamily}\n      >\n        <Calendar {...calendarProps} />\n      </svg>\n      <div\n        ref={horizontalContainerRef}\n        className={styles.horizontalContainer}\n        style={\n          ganttHeight\n            ? { height: ganttHeight, width: gridProps.svgWidth }\n            : { width: gridProps.svgWidth }\n        }\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={gridProps.svgWidth}\n          height={barProps.rowHeight * barProps.tasks.length}\n          fontFamily={barProps.fontFamily}\n          ref={ganttSVGRef}\n        >\n          <Grid {...gridProps} />\n          <TaskGanttContent {...newBarProps} />\n        </svg>\n      </div>\n    </div>\n  );\n};\n","import React, { SyntheticEvent, useRef, useEffect } from \"react\";\nimport styles from \"./horizontal-scroll.module.css\";\n\nexport const HorizontalScroll: React.FC<{\n  scroll: number;\n  svgWidth: number;\n  taskListWidth: number;\n  rtl: boolean;\n  onScroll: (event: SyntheticEvent<HTMLDivElement>) => void;\n}> = ({ scroll, svgWidth, taskListWidth, rtl, onScroll }) => {\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollLeft = scroll;\n    }\n  }, [scroll]);\n\n  return (\n    <div\n      dir=\"ltr\"\n      style={{\n        margin: rtl\n          ? `0px ${taskListWidth}px 0px 0px`\n          : `0px 0px 0px ${taskListWidth}px`,\n      }}\n      className={styles.scroll}\n      onScroll={onScroll}\n      ref={scrollRef}\n    >\n      <div style={{ width: svgWidth, height: 1 }} />\n    </div>\n  );\n};\n","import React, { useState, SyntheticEvent, useRef, useEffect } from \"react\";\nimport { ViewMode, GanttProps, Task } from \"../../types/public-types\";\nimport { GridProps } from \"../grid/grid\";\nimport { ganttDateRange, seedDates } from \"../../helpers/date-helper\";\nimport { CalendarProps } from \"../calendar/calendar\";\nimport { TaskGanttContentProps } from \"./task-gantt-content\";\nimport { TaskListHeaderDefault } from \"../task-list/task-list-header\";\nimport { TaskListTableDefault } from \"../task-list/task-list-table\";\nimport { StandardTooltipContent, Tooltip } from \"../other/tooltip\";\nimport { VerticalScroll } from \"../other/vertical-scroll\";\nimport { TaskListProps, TaskList } from \"../task-list/task-list\";\nimport { TaskGantt } from \"./task-gantt\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { convertToBarTasks } from \"../../helpers/bar-helper\";\nimport { GanttEvent } from \"../../types/gantt-task-actions\";\nimport { DateSetup } from \"../../types/date-setup\";\nimport styles from \"./gantt.module.css\";\nimport { HorizontalScroll } from \"../other/horizontal-scroll\";\nimport { removeHiddenTasks } from \"../../helpers/other-helper\";\n\nexport const Gantt: React.FunctionComponent<GanttProps> = ({\n  tasks,\n  headerHeight = 50,\n  columnWidth = 60,\n  listCellWidth = \"155px\",\n  rowHeight = 50,\n  ganttHeight = 0,\n  viewMode = ViewMode.Day,\n  locale = \"en-GB\",\n  barFill = 60,\n  barCornerRadius = 3,\n  barProgressColor = \"#a3a3ff\",\n  barProgressSelectedColor = \"#8282f5\",\n  barBackgroundColor = \"#b8c2cc\",\n  barBackgroundSelectedColor = \"#aeb8c2\",\n  projectProgressColor = \"#7db59a\",\n  projectProgressSelectedColor = \"#59a985\",\n  projectBackgroundColor = \"#fac465\",\n  projectBackgroundSelectedColor = \"#f7bb53\",\n  milestoneBackgroundColor = \"#f1c453\",\n  milestoneBackgroundSelectedColor = \"#f29e4c\",\n  rtl = false,\n  handleWidth = 8,\n  timeStep = 300000,\n  arrowColor = \"grey\",\n  fontFamily = \"Arial, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue\",\n  fontSize = \"14px\",\n  arrowIndent = 20,\n  todayColor = \"rgba(252, 248, 227, 0.5)\",\n  TooltipContent = StandardTooltipContent,\n  TaskListHeader = TaskListHeaderDefault,\n  TaskListTable = TaskListTableDefault,\n  onDateChange,\n  onProgressChange,\n  onDoubleClick,\n  onDelete,\n  onSelect,\n  onExpanderClick,\n}) => {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const taskListRef = useRef<HTMLDivElement>(null);\n  const [dateSetup, setDateSetup] = useState<DateSetup>(() => {\n    const [startDate, endDate] = ganttDateRange(tasks, viewMode);\n    return { viewMode, dates: seedDates(startDate, endDate, viewMode) };\n  });\n\n  const [taskHeight, setTaskHeight] = useState((rowHeight * barFill) / 100);\n  const [taskListWidth, setTaskListWidth] = useState(0);\n  const [svgContainerWidth, setSvgContainerWidth] = useState(0);\n  const [svgContainerHeight, setSvgContainerHeight] = useState(ganttHeight);\n  const [barTasks, setBarTasks] = useState<BarTask[]>([]);\n  const [ganttEvent, setGanttEvent] = useState<GanttEvent>({\n    action: \"\",\n  });\n\n  const [selectedTask, setSelectedTask] = useState<BarTask>();\n  const [failedTask, setFailedTask] = useState<BarTask | null>(null);\n\n  const svgWidth = dateSetup.dates.length * columnWidth;\n  const ganttFullHeight = barTasks.length * rowHeight;\n\n  const [scrollY, setScrollY] = useState(0);\n  const [scrollX, setScrollX] = useState(-1);\n  const [ignoreScrollEvent, setIgnoreScrollEvent] = useState(false);\n\n  // task change events\n  useEffect(() => {\n    let filteredTasks: Task[];\n    if (onExpanderClick) {\n      filteredTasks = removeHiddenTasks(tasks);\n    } else {\n      filteredTasks = tasks;\n    }\n    const [startDate, endDate] = ganttDateRange(filteredTasks, viewMode);\n    let newDates = seedDates(startDate, endDate, viewMode);\n    if (rtl) {\n      newDates = newDates.reverse();\n      if (scrollX === -1) {\n        setScrollX(newDates.length * columnWidth);\n      }\n    }\n    setDateSetup({ dates: newDates, viewMode });\n    setBarTasks(\n      convertToBarTasks(\n        filteredTasks,\n        newDates,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        barProgressColor,\n        barProgressSelectedColor,\n        barBackgroundColor,\n        barBackgroundSelectedColor,\n        projectProgressColor,\n        projectProgressSelectedColor,\n        projectBackgroundColor,\n        projectBackgroundSelectedColor,\n        milestoneBackgroundColor,\n        milestoneBackgroundSelectedColor\n      )\n    );\n  }, [\n    tasks,\n    viewMode,\n    rowHeight,\n    barCornerRadius,\n    columnWidth,\n    taskHeight,\n    handleWidth,\n    barProgressColor,\n    barProgressSelectedColor,\n    barBackgroundColor,\n    barBackgroundSelectedColor,\n    projectProgressColor,\n    projectProgressSelectedColor,\n    projectBackgroundColor,\n    projectBackgroundSelectedColor,\n    milestoneBackgroundColor,\n    milestoneBackgroundSelectedColor,\n    rtl,\n    scrollX,\n    onExpanderClick,\n  ]);\n\n  useEffect(() => {\n    const { changedTask, action } = ganttEvent;\n    if (changedTask) {\n      if (action === \"delete\") {\n        setGanttEvent({ action: \"\" });\n        setBarTasks(barTasks.filter(t => t.id !== changedTask.id));\n      } else if (\n        action === \"move\" ||\n        action === \"end\" ||\n        action === \"start\" ||\n        action === \"progress\"\n      ) {\n        const prevStateTask = barTasks.find(t => t.id === changedTask.id);\n        if (\n          prevStateTask &&\n          (prevStateTask.start.getTime() !== changedTask.start.getTime() ||\n            prevStateTask.end.getTime() !== changedTask.end.getTime() ||\n            prevStateTask.progress !== changedTask.progress)\n        ) {\n          // actions for change\n          const newTaskList = barTasks.map(t =>\n            t.id === changedTask.id ? changedTask : t\n          );\n          setBarTasks(newTaskList);\n        }\n      }\n    }\n  }, [ganttEvent, barTasks]);\n\n  useEffect(() => {\n    if (failedTask) {\n      setBarTasks(barTasks.map(t => (t.id !== failedTask.id ? t : failedTask)));\n      setFailedTask(null);\n    }\n  }, [failedTask, barTasks]);\n\n  useEffect(() => {\n    const newTaskHeight = (rowHeight * barFill) / 100;\n    if (newTaskHeight !== taskHeight) {\n      setTaskHeight(newTaskHeight);\n    }\n  }, [rowHeight, barFill, taskHeight]);\n\n  useEffect(() => {\n    if (!listCellWidth) {\n      setTaskListWidth(0);\n    }\n    if (taskListRef.current) {\n      setTaskListWidth(taskListRef.current.offsetWidth);\n    }\n  }, [taskListRef, listCellWidth]);\n\n  useEffect(() => {\n    if (wrapperRef.current) {\n      setSvgContainerWidth(wrapperRef.current.offsetWidth - taskListWidth);\n    }\n  }, [wrapperRef, taskListWidth]);\n\n  useEffect(() => {\n    if (ganttHeight) {\n      setSvgContainerHeight(ganttHeight + headerHeight);\n    } else {\n      setSvgContainerHeight(tasks.length * rowHeight + headerHeight);\n    }\n  }, [ganttHeight, tasks]);\n\n  // scroll events\n  useEffect(() => {\n    const handleWheel = (event: WheelEvent) => {\n      if (event.shiftKey || event.deltaX) {\n        const scrollMove = event.deltaX ? event.deltaX : event.deltaY;\n        let newScrollX = scrollX + scrollMove;\n        if (newScrollX < 0) {\n          newScrollX = 0;\n        } else if (newScrollX > svgWidth) {\n          newScrollX = svgWidth;\n        }\n        setScrollX(newScrollX);\n        event.preventDefault();\n      } else if (ganttHeight) {\n        let newScrollY = scrollY + event.deltaY;\n        if (newScrollY < 0) {\n          newScrollY = 0;\n        } else if (newScrollY > ganttFullHeight - ganttHeight) {\n          newScrollY = ganttFullHeight - ganttHeight;\n        }\n        if (newScrollY !== scrollY) {\n          setScrollY(newScrollY);\n          event.preventDefault();\n        }\n      }\n\n      setIgnoreScrollEvent(true);\n    };\n\n    // subscribe if scroll is necessary\n    if (wrapperRef.current) {\n      wrapperRef.current.addEventListener(\"wheel\", handleWheel, {\n        passive: false,\n      });\n    }\n    return () => {\n      if (wrapperRef.current) {\n        wrapperRef.current.removeEventListener(\"wheel\", handleWheel);\n      }\n    };\n  }, [wrapperRef.current, scrollY, scrollX, ganttHeight, svgWidth, rtl]);\n\n  const handleScrollY = (event: SyntheticEvent<HTMLDivElement>) => {\n    if (scrollY !== event.currentTarget.scrollTop && !ignoreScrollEvent) {\n      setScrollY(event.currentTarget.scrollTop);\n    }\n    setIgnoreScrollEvent(false);\n  };\n\n  const handleScrollX = (event: SyntheticEvent<HTMLDivElement>) => {\n    if (scrollX !== event.currentTarget.scrollLeft && !ignoreScrollEvent) {\n      setScrollX(event.currentTarget.scrollLeft);\n    }\n    setIgnoreScrollEvent(false);\n  };\n\n  /**\n   * Handles arrow keys events and transform it to new scroll\n   */\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    let newScrollY = scrollY;\n    let newScrollX = scrollX;\n    let isX = true;\n    switch (event.key) {\n      case \"Down\": // IE/Edge specific value\n      case \"ArrowDown\":\n        newScrollY += rowHeight;\n        isX = false;\n        break;\n      case \"Up\": // IE/Edge specific value\n      case \"ArrowUp\":\n        newScrollY -= rowHeight;\n        isX = false;\n        break;\n      case \"Left\":\n      case \"ArrowLeft\":\n        newScrollX -= columnWidth;\n        break;\n      case \"Right\": // IE/Edge specific value\n      case \"ArrowRight\":\n        newScrollX += columnWidth;\n        break;\n    }\n    if (isX) {\n      if (newScrollX < 0) {\n        newScrollX = 0;\n      } else if (newScrollX > svgWidth) {\n        newScrollX = svgWidth;\n      }\n      setScrollX(newScrollX);\n    } else {\n      if (newScrollY < 0) {\n        newScrollY = 0;\n      } else if (newScrollY > ganttFullHeight - ganttHeight) {\n        newScrollY = ganttFullHeight - ganttHeight;\n      }\n      setScrollY(newScrollY);\n    }\n    setIgnoreScrollEvent(true);\n  };\n\n  /**\n   * Task select event\n   */\n  const handleSelectedTask = (taskId: string) => {\n    const newSelectedTask = barTasks.find(t => t.id === taskId);\n    const oldSelectedTask = barTasks.find(\n      t => !!selectedTask && t.id === selectedTask.id\n    );\n    if (onSelect) {\n      if (oldSelectedTask) {\n        onSelect(oldSelectedTask, false);\n      }\n      if (newSelectedTask) {\n        onSelect(newSelectedTask, true);\n      }\n    }\n    setSelectedTask(newSelectedTask);\n  };\n  const handleExpanderClick = (task: Task) => {\n    if (onExpanderClick && task.hideChildren !== undefined) {\n      onExpanderClick({ ...task, hideChildren: !task.hideChildren });\n    }\n  };\n  const gridProps: GridProps = {\n    columnWidth,\n    svgWidth,\n    tasks: tasks,\n    rowHeight,\n    dates: dateSetup.dates,\n    todayColor,\n    rtl,\n  };\n  const calendarProps: CalendarProps = {\n    dateSetup,\n    locale,\n    viewMode,\n    headerHeight,\n    columnWidth,\n    fontFamily,\n    fontSize,\n    rtl,\n  };\n  const barProps: TaskGanttContentProps = {\n    tasks: barTasks,\n    dates: dateSetup.dates,\n    ganttEvent,\n    selectedTask,\n    rowHeight,\n    taskHeight,\n    columnWidth,\n    arrowColor,\n    timeStep,\n    fontFamily,\n    fontSize,\n    arrowIndent,\n    svgWidth,\n    rtl,\n    setGanttEvent,\n    setFailedTask,\n    setSelectedTask: handleSelectedTask,\n    onDateChange,\n    onProgressChange,\n    onDoubleClick,\n    onDelete,\n  };\n\n  const tableProps: TaskListProps = {\n    rowHeight,\n    rowWidth: listCellWidth,\n    fontFamily,\n    fontSize,\n    tasks: barTasks,\n    locale,\n    headerHeight,\n    scrollY,\n    ganttHeight,\n    horizontalContainerClass: styles.horizontalContainer,\n    selectedTask,\n    taskListRef,\n    setSelectedTask: handleSelectedTask,\n    onExpanderClick: handleExpanderClick,\n    TaskListHeader,\n    TaskListTable,\n  };\n  return (\n    <div>\n      <div\n        className={styles.wrapper}\n        onKeyDown={handleKeyDown}\n        tabIndex={0}\n        ref={wrapperRef}\n      >\n        {listCellWidth && <TaskList {...tableProps} />}\n        <TaskGantt\n          gridProps={gridProps}\n          calendarProps={calendarProps}\n          barProps={barProps}\n          ganttHeight={ganttHeight}\n          scrollY={scrollY}\n          scrollX={scrollX}\n        />\n        {ganttEvent.changedTask && (\n          <Tooltip\n            arrowIndent={arrowIndent}\n            rowHeight={rowHeight}\n            svgContainerHeight={svgContainerHeight}\n            svgContainerWidth={svgContainerWidth}\n            fontFamily={fontFamily}\n            fontSize={fontSize}\n            scrollX={scrollX}\n            scrollY={scrollY}\n            task={ganttEvent.changedTask}\n            headerHeight={headerHeight}\n            taskListWidth={taskListWidth}\n            TooltipContent={TooltipContent}\n            rtl={rtl}\n            svgWidth={svgWidth}\n          />\n        )}\n        <VerticalScroll\n          ganttFullHeight={ganttFullHeight}\n          ganttHeight={ganttHeight}\n          headerHeight={headerHeight}\n          scroll={scrollY}\n          onScroll={handleScrollY}\n          rtl={rtl}\n        />\n      </div>\n      <HorizontalScroll\n        svgWidth={svgWidth}\n        taskListWidth={taskListWidth}\n        scroll={scrollX}\n        rtl={rtl}\n        onScroll={handleScrollX}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}